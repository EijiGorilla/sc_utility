"use strict";(self.webpackChunksc_utility=self.webpackChunksc_utility||[]).push([[5972],{15972:(e,t,s)=>{s.d(t,{uploadAssets:()=>N});s(59486);var n=s(76200),o=s(93169),r=s(32718),a=s(66978),i=s(38499),l=s(35995),c=s(71907),u=s(17493),p=s(25889);const f={upload:{createFromFiles:.8,loadMesh:.2},uploadAssetBlobs:{prepareAssetItems:.9,uploadAssetItems:.1},uploadConvertibleSource:{uploadEditSource:.5,serviceAssetsToGlb:.5},uploadLocalMesh:{meshToAssetBlob:.5,uploadAssetBlobs:.5}};var d=s(25899),g=s(42537),m=s(77427);function h(e){return new w(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>{},arguments.length>2?arguments[2]:void 0)}class w{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>{},s=arguments.length>2?arguments[2]:void 0;if(this.onProgress=t,this.taskName=s,this._progressMap=new Map,this._startTime=void 0,this._timingsMap=new Map,"number"==typeof e){this._weights={};for(let t=0;t<e;t++){const s=t,n=1/e;this._weights[s]=n,this._progressMap.set(s,0)}}else this._weights=e;this.emitProgress()}emitProgress(){let e=0;for(const[t,s]of this._progressMap.entries())e+=s*this._weights[t];if(1===e&&(0,o.Z)("enable-feature:esri-3dofl-upload-timings")){const e=Math.round(performance.now()-(this._startTime??0))/1e3;console.log(`${this.taskName} done in ${e} sec`);for(const[t,s]of this._timingsMap){const n=Math.round(s.end-s.start)/1e3,o=Math.round(n/e*100);console.log(this.taskName??"Task",{stepKey:t,stepTime:n,relativeTime:o})}}this.onProgress(e)}setProgress(e,t){if(this._progressMap.set(e,t),(0,o.Z)("enable-feature:esri-3dofl-upload-timings")){const s=performance.now();this._startTime??=s;const n=(0,m.s1)(this._timingsMap,e,(()=>({start:s,end:0})));1===t&&(n.end=s)}this.emitProgress()}simulate(e,t){return y((t=>this.setProgress(e,t)),t)}makeOnProgress(e){return t=>this.setProgress(e,t)}}function y(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e=>{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:A;const s=performance.now();e(0);const n=setInterval((()=>{const n=performance.now()-s,o=1-Math.exp(-n/t);e(o)}),T);return(0,g.kB)((()=>{clearInterval(n),e(1)}))}function v(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:P;return(0,i.up)((0,i._H)(e*b/t))}const P=10,_=10,b=8e-6,T=(0,i.HA)(50),A=(0,i.HA)(1e3),k=1e6,Z=20*k,j=2e9,F=3;async function M(e,t,s){let{data:o,name:r,description:i}=e,c=null;try{const e=(0,l.v_)(t,"uploads"),p=(0,l.v_)(e,"info"),{data:f}=await(0,n.Z)(p,{query:{f:"json"},responseType:"json"});(0,a.k_)(s);const g=(0,d.M8)(t),m=f.maxUploadFileSize*k,w=g?j:m,y=g?Math.min(Z,m):Z;if(o.size>w)throw new Error("Data too large");const P=(0,l.v_)(e,"register"),{data:_}=await(0,n.Z)(P,{query:{f:"json",itemName:(u=r,u.replaceAll("/","_").replaceAll("\\","_")),description:i},responseType:"json",method:"post"});if((0,a.k_)(s),!_.success)throw new Error("Registration failed");const{itemID:b}=_.item;c=(0,l.v_)(e,b);const T=(0,l.v_)(c,"uploadPart"),A=Math.ceil(o.size/y),M=new Array;for(let t=0;t<A;++t)M.push(o.slice(t*y,Math.min((t+1)*y,o.size)));const S=M.slice().reverse(),C=new Array,E=h(A,s?.onProgress,"uploadItem"),D=async()=>{for(;0!==S.length;){const e=M.length-S.length,t=S.pop(),o=new FormData,r=E.simulate(e,v(t.size));try{o.append("f","json"),o.append("file",t),o.append("partId",`${e}`);const{data:r}=await(0,n.Z)(T,{timeout:0,body:o,responseType:"json",method:"post"});if((0,a.k_)(s),!r.success)throw new Error("Part upload failed")}finally{r.remove()}}};for(let t=0;t<F&&0!==S.length;++t)C.push(D());await Promise.all(C);const N=(0,l.v_)(c,"commit"),{data:R}=await(0,n.Z)(N,{query:{f:"json",parts:M.map(((e,t)=>t)).join(",")},responseType:"json",method:"post"});if((0,a.k_)(s),!R.success)throw new Error("Commit failed");return R.item}catch(p){if(null!=c){const e=(0,l.v_)(c,"delete");await(0,n.Z)(e,{query:{f:"json"},responseType:"json",method:"post"})}throw p}var u}var S=s(18277),C=s(5559),E=s(25219),D=s(78952);async function N(e,t,s){const n=e.length;if(!n)return s?.onProgress?.(1),[];const r=h(n,s?.onProgress,"uploadAssets");return Promise.all(e.map(((e,n)=>async function(e,t,s){let{layer:n,ongoingUploads:r}=t;const d=r.get(e);if(d)return d;if(!function(e){return!!e.infoFor3D&&!!e.url}(n))throw new p.sc;if(function(e,t){const{parsedUrl:s}=t;return null!=s&&e.metadata.externalSources.some((e=>(0,u.JG)(e,s)))}(e,n))return s?.onProgress?.(1),e;const g=async function(e,t,s){const{metadata:n}=e,{displaySource:r}=n,d=R(r?.source,t,{checkForConversionRequired:(0,o.Z)("enable-feature:georeferenced-uploads")}),g=null!=d?async function(e,t,s){return{source:await I(e,t,s),original:!0,unitConversionDisabled:!0}}(d,t,s):n.externalSources.length>0?async function(e,t,s){const n=Y(t),{externalSources:r}=e.metadata,a=function(e,t){for(const s of e){const e=R(s.source,t);if(e)return e}return null}(r,t);if(!a)throw new p.kE;const c=h(f.uploadConvertibleSource,s?.onProgress,"uploadConvertibleSource"),d=await I(a,t,{onProgress:c.makeOnProgress("uploadEditSource")});e.addExternalSources([{source:d,original:!0}]);const g=a.reduce(((e,t)=>{let{asset:s}=t;return s instanceof File?e+s.size:e}),0),m=c.simulate("serviceAssetsToGlb",function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:_;return(0,i.up)((0,i._H)(e*b/t))}(g));try{const{source:r,transform:a,origin:i}=await async function(e,t,s){const n=e.map((e=>{let{assetName:t,parts:s}=e;return{assetName:t,assetHash:s[0].partHash}}));let r;try{const e=(0,l.v_)(t.parsedUrl.path,"convert3D"),o=t.capabilities?.operations.supportsAsyncConvert3D;r=(await(o?X:U)(e,{query:{f:"json",assets:JSON.stringify(n),transportType:"esriTransportTypeUrl",targetFormat:s,async:o},responseType:"json",timeout:0})).data}catch(a){throw new p.s8}return function(e,t){const s={source:t.assets.map((t=>{const s=(0,S.S0)(t.contentType,e.infoFor3D.supportedFormats);if(!s)throw new p.jO(s);return new u.CP(t.assetName,t.contentType,[new u.LL(t.assetURL,t.assetHash)])})),origin:void 0,transform:void 0};if((0,o.Z)("enable-feature:georeferenced-uploads")&&t.transform){if(s.transform=(0,E.E)(t.transform),t.spatialReference){const e=D.Z.fromJSON(t.spatialReference);s.origin=(0,E.A)(t.transform,e)}}else s.transform=(0,C.c)(e.spatialReference);return s}(t,r)}(d,t,n);return e.transform=a,i&&(e.metadata.georeferenced=!0,s?.useAssetOrigin&&(e.vertexSpace.origin=[i.x,i.y,i.z??0],e.spatialReference=i.spatialReference)),{source:r,unitConversionDisabled:!0}}finally{m.remove()}}(e,t,s):async function(e,t,s){const n=h(f.uploadLocalMesh,s?.onProgress,"uploadLocalMesh"),o=async function(e,t,s){const n=Y(t),o=await e.load(s),r=await o.toBinaryGLTF({origin:o.origin,signal:s?.signal,ignoreLocalTransform:!0,unitConversionDisabled:!0});return(0,a.k_)(s),{blob:new Blob([r],{type:"model/gltf-binary"}),assetName:`${(0,c.zS)()}.glb`,assetType:n}}(e,t,{...s,onProgress:n.makeOnProgress("meshToAssetBlob")});return{source:await O([o],t,{...s,onProgress:n.makeOnProgress("uploadAssetBlobs")}),extent:e.extent.clone(),original:!0}}(e,t,s),m=await g;return(0,a.k_)(s),e.addExternalSources([m]),e}(e,n,s);r.set(e,g);try{await g}finally{r.delete(e)}return e}(e,t,{...s,onProgress:r.makeOnProgress(n)}))))}function R(e,t){let{infoFor3D:s}=t,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!e)return null;const{supportedFormats:o,editFormats:r}=s,a=(0,u.zE)(e),i=new Array,l=(0,S.Wr)(s),c=(0,S.sg)(s);let p=!1;for(const u of a){const e=x(u,o);if(!e)return null;const{assetType:t}=e;if(n.checkForConversionRequired&&(t===l||t===c))return null;r.includes(t)&&(p=!0),i.push(e)}return p?i:null}function x(e,t){const s=(0,u.vj)(e,t);return s?{asset:e,assetType:s}:null}async function I(e,t,s){return O(e.map((e=>async function(e,t){const{asset:s,assetType:n}=e;if(s instanceof File)return{blob:s,assetName:s.name,assetType:n};const o=await s.toBlob(t);return(0,a.k_)(t),{blob:o,assetName:s.assetName,assetType:n}}(e,s))),t,s)}async function O(e,t,s){const n=h(f.uploadAssetBlobs,s?.onProgress,"uploadAssetBlobs"),o=await function(e,t,s){const n=h(e.length,s?.onProgress,"prepareAssetItems");return Promise.all(e.map((async(e,o)=>{const i=async function(e,t,s){const{blob:n,assetType:o,assetName:i}=e;let c=null;try{const e=await M({data:n,name:i},t.url,s);(0,a.k_)(s),c={assetType:o,assetUploadId:e.itemID}}catch(A){(0,a.r9)(A),r.Z.getLogger("esri.layers.graphics.sources.support.uploadAssets").warnOnce(`Service ${t.url} does not support the REST Uploads API.`)}if(!c){const e=await(0,l.IR)(n);if((0,a.k_)(s),!e.isBase64)throw new p.AC;c={assetType:o,assetData:e.data}}if(!c)throw new p._C;return{item:c,assetName:i}}(await e,t,{...s,onProgress:n.makeOnProgress(o)});return(0,a.k_)(s),i})))}(e,t,{...s,onProgress:n.makeOnProgress("prepareAssetItems")});(0,a.k_)(s);const i=o.map((e=>{let{item:t}=e;return t})),{uploadResults:c}=await B(i,t,{...s,onProgress:n.makeOnProgress("uploadAssetItems")});return(0,a.k_)(s),e.map(((e,s)=>function(e,t,s){const{success:n}=t;if(!n){const{error:s}=t;throw new p.fB(e.assetName,s)}const{assetHash:o}=t,{assetName:r,item:{assetType:a}}=e,{infoFor3D:{supportedFormats:i}}=s,l=(0,S.d1)(a,i);if(!l)throw new p.jO(a);return new u.CP(r,l,[new u.LL(`${s.parsedUrl.path}/assets/${o}`,o)])}(o[s],c[s],t)))}async function B(e,t,s){const o=y(s?.onProgress);try{const o=await(0,n.Z)((0,l.v_)(t.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(e)},method:"post",responseType:"json"});if((0,a.k_)(s),o.data.uploadResults.length!==e.length)throw new p.Fz(e.length,o.data.uploadResults.length);return o.data}finally{o.remove()}}function U(e,t){return(0,n.Z)(e,t)}async function X(e,t){const s=(await(0,n.Z)(e,t)).data.statusUrl;for(;;){const e=(await(0,n.Z)(s,{query:{f:"json"},responseType:"json"})).data;switch(e.status){case"Completed":return(0,n.Z)(e.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(e.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await(0,a.e4)(z)}}function Y(e){let{infoFor3D:t}=e;const s=(0,S.X4)(t);if(!s)throw new p.ks;return s}const z=(0,i.HA)(1e3)},25219:(e,t,s)=>{s.d(t,{A:()=>r,E:()=>a});s(59486);var n=s(76046),o=s(848);function r(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:i;return new o.Z({x:e[s.originX],y:e[s.originY],z:e[s.originZ],spatialReference:t})}function a(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i;return new n.Z({translation:[e[t.translationX],-e[t.translationZ],e[t.translationY]],rotationAxis:[e[t.rotationX],-e[t.rotationZ],e[t.rotationY]],rotationAngle:e[t.rotationDeg],scale:[e[t.scaleX],e[t.scaleZ],e[t.scaleY]]})}const i={originX:"originX",originY:"originY",originZ:"originZ",translationX:"translationX",translationY:"translationY",translationZ:"translationZ",scaleX:"scaleX",scaleY:"scaleY",scaleZ:"scaleZ",rotationX:"rotationX",rotationY:"rotationY",rotationZ:"rotationZ",rotationDeg:"rotationDeg"}}}]);
//# sourceMappingURL=5972.cc9d3c1b.chunk.js.map