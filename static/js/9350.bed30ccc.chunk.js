"use strict";(self.webpackChunksc_utility=self.webpackChunksc_utility||[]).push([[9350],{89350:(e,t,i)=>{i.r(t),i.d(t,{default:()=>St});var n=i(27366),r=i(44055),s=i(11582),a=i(10064),o=i(32718),l=i(97642),c=i(66978),u=i(94172),h=i(49861),d=i(25243),f=(i(84936),i(93169)),p=i(27135),m=i(69912),y=i(30651),g=i(11936),v=i(6693),x=i(46671),w=(i(59486),i(45918)),b=i(76200),I=i(44927),_=i(38511),R=i(92975),S=i(25899),T=i(70361),C=i(86591),k=i(22678),F=i(41625),M=i(79586),O=i(22824),P=i(80885),D=i(46784),B=i(67426),N=i(59068),Z=i(32014),J=i(21969);var A=i(80394),E=i(848);const z=new Map,L=new class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:15e3,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}decreaseRefCount(e,t){const i=e+"/"+t,n=this._cachedBlocks;if(n.has(i)){const e=n.get(i);return e.refCount--,e.refCount<=0&&(n.delete(i),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){const i=e+"/"+t,n=this._cachedBlocks;if(n.has(i)){const e=n.get(i);return e.ts=Date.now(),e.refCount++,n.delete(i),n.set(i,e),e.block}return null}putBlock(e,t,i,n){const r=this._cachedBlocks,s=e+"/"+t;if(r.has(s)){const e=r.get(s);e.ts=Date.now(),e.refCount++}else r.set(s,{block:i,ts:Date.now(),refCount:1,controller:n});this._trim(),this._updateTimer()}deleteBlock(e,t){const i=this._cachedBlocks,n=e+"/"+t;i.has(n)&&i.delete(n)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(null!=this._timer)return;const e=this._cachedBlocks;this._timer=setInterval((()=>{const t=Array.from(e),i=Date.now();for(let n=0;n<t.length&&t[n][1].ts<=i-this._duration;n++)e.delete(t[n][0]);0===e.size&&this._clearTimer()}),this._interval)}_trim(){const e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;const t=Array.from(e);for(let i=0;i<t.length-this._size;i++)e.delete(t[i][0])}_clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};function H(e,t){return null==t?e:"".concat(e,"?sliceId=").concat(t)}function W(e,t,i){var n;const r=z.get(e);if(!r)return null==t?L.decreaseRefCount(e,i):0;if(null==t||null==r[t])return L.decreaseRefCount(e,i);const s=null===(n=r[t])||void 0===n?void 0:n.cache,a=null===s||void 0===s?void 0:s.get(i);if(s&&a){if(a.refCount--,0===a.refCount){s.delete(i);for(let e=0;e<r.length;e++){var o;null===(o=r[e])||void 0===o||o.cache.delete(i)}a.controller&&a.controller.abort()}return a.refCount}return 0}function q(e,t,i){var n;const r=z.get(e);if(!r)return null==t?L.getBlock(e,i):null;if(null==t||null==r[t]){for(let e=0;e<r.length;e++){var s;const t=null===(s=r[e])||void 0===s?void 0:s.cache.get(i);if(t)return t.refCount++,t.block}return L.getBlock(e,i)}const a=null===(n=r[t])||void 0===n?void 0:n.cache.get(i);if(a)return a.refCount++,a.block;for(let l=0;l<r.length;l++){var o;if(l===t||!r[l])continue;const e=null===(o=r[l])||void 0===o?void 0:o.cache,n=null===e||void 0===e?void 0:e.get(i);if(e&&n)return n.refCount++,e.set(i,n),n.block}return null}function G(e,t,i,n){var r;let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const a=z.get(e);if(!a)return void(null==t&&L.putBlock(e,i,n,s));if(null==t||null==a[t])return void L.putBlock(e,i,n,s);const o={refCount:1,block:n,isResolved:!1,isRejected:!1,controller:s};n.then((()=>o.isResolved=!0)).catch((()=>o.isRejected=!0)),null===(r=a[t])||void 0===r||r.cache.set(i,o)}function j(e,t,i){var n;const r=z.get(e);r?null!=t&&null!=r[t]?null===(n=r[t])||void 0===n||n.cache.delete(i):L.deleteBlock(e,i):null==t&&L.deleteBlock(e,i)}var U=i(92089),V=i(45502),Y=i(17314),K=i(64145),X=i(38164),Q=i(53866),$=i(78952);let ee=0,te=class extends((0,B.v)(D.wq)){constructor(){super(...arguments),this._tileFetchQueue=new X.e({concurrency:32,process:(e,t)=>this._fetchRawTile(e.pyramidLevel,e.row,e.col,{...e.options,signal:t})}),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=(0,A.zD)();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){var t;return null!==(t=e)&&void 0!==t&&t.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:O.Z.create(),...e.ioConfig}}),e}get _isGlobalWrappableSource(){const{rasterInfo:e}=this,t=(0,A.ut)(e.spatialReference);return null!=t&&e.extent.width>=t/2}get _hasNoneOrGCSShiftTransform(){const{transform:e}=this.rasterInfo;return null==e||"gcs-shift"===e.type}set rasterJobHandler(e){var t;this._set("rasterJobHandler",e),"Function"===this.datasetFormat&&(null===(t=this.primaryRasters)||void 0===t||null===(t=t.rasters)||void 0===t||t.forEach((t=>t.rasterJobHandler=e)))}get rasterId(){return this.url||"rasterId-"+ee++}set url(e){this._set("url",(0,S.Nm)(e,o.Z.getLogger(this)))}async open(e){throw new a.Z("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const r=n.tileInfo||this.rasterInfo.storageInfo.tileInfo,s=this.getTileExtentFromTileInfo(e,t,i,r);return n={noClip:!0,...n},this.fetchPixels(s,r.size[0],r.size[1],n)}async identify(e){var t,i;let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};e=(0,d.TJ)(E.Z,e).clone().normalize();const{multidimensionalDefinition:r,timeExtent:s}=n,{rasterInfo:a}=this,{hasMultidimensionalTranspose:o,multidimensionalInfo:l}=a;let{transposedVariableName:c}=n;const u=null!=l&&o&&(null!=s||(0,J.WU)(r));var h;u&&!c&&(c=null!=r&&r.length>0?null!==(h=r[0].variableName)&&void 0!==h?h:void 0:l.variables[0].name,n={...n,transposedVariableName:c});n=this._getRequestOptionsWithSliceId(n);const{spatialReference:f,extent:p}=a,{datumTransformation:m}=n;let y=(0,A.nF)(e,f,m);if(!p.intersects(y))return{location:y,value:null};if(null!=a.transform){const e=a.transform.inverseTransform(y);if(!a.nativeExtent.intersects(e))return{location:e,value:null};y=e}let g=0;const v=null!=c&&null!=l&&a.hasMultidimensionalTranspose;if("Function"===this.datasetFormat){const e=this.primaryRasters.rasters[0];if(v)return e.identify(y,n);const{pixelSize:t}=a,i=3,s=t.x*i/2,o=t.y*i/2,l=new Q.Z({xmin:y.x-s,xmax:y.x+s,ymin:y.y-o,ymax:y.y+o,spatialReference:f}),c={interpolation:"nearest",multidimensionalDefinition:r,sliceId:n.sliceId},{pixelBlock:u}=await e.fetchPixels(l,i,i,c),{pixelBlock:h}=await this.fetchPixels(l,i,i,c);if(null==u)return{location:y,value:null};const d=Math.floor(i*i*.5),p=!u.mask||u.mask[d]?u.pixels.map((e=>e[d])):null;let m;return null!=h&&(m=!h.mask||h.mask[d]?h.pixels.map((e=>e[d])):void 0),{location:y,value:p,processedValue:m,pyramidLevel:0}}if(!v)if(n.srcResolution)g=(0,A.kr)(n.srcResolution,a,this.ioConfig.sampling).pyramidLevel;else if(g=await this.computeBestPyramidLevelForLocation(e,n),null==g)return{location:y,value:null};const x=this.identifyPixelLocation(y,g,null,v);if(null===x)return{location:y,value:null};const{row:w,col:b,rowOffset:I,colOffset:_,blockWidth:R}=x,S=null!==(t=c)&&void 0!==t?t:n.sliceId,T=H(this.rasterId,S),C="".concat(g,"/").concat(w,"/").concat(b);let k=q(T,null,C);null==k&&(k=this.fetchRawTile(g,w,b,n),G(T,null,C,k));const F=await k;if(null===F||void 0===F||null===(i=F.pixels)||void 0===i||!i.length)return{location:y,value:null};const M=I*R+_;return this._processIdentifyResult(F,{srcLocation:y,position:M,pyramidLevel:g,useTransposedTile:!!v,requestSomeSlices:u,identifyOptions:n})}async fetchPixels(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};e=(0,A.Fi)(e),n=this._getRequestOptionsWithSliceId(n);const{_hasNoneOrGCSShiftTransform:r}=this;if(n.requestRawData&&r)return this._fetchPixels(e,t,i,n);const s=(0,A.ut)(e.spatialReference),a=(0,A.Hq)(e);if(null==s||0===a||1===a&&this._isGlobalWrappableSource&&r)return this._fetchPixels(e,t,i,n);if(a>=3)return{extent:e,pixelBlock:null};const o=[],{xmin:l,xmax:c}=e,u=Math.round(s/(c-l)*t),h=u-Math.round((s/2-l)/(c-l)*t);let d=0;const f=[];for(let g=0;g<=a;g++){const r=new Q.Z({xmin:0===g?l:-s/2,xmax:g===a?c-s*g:s/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),p=0===g?u-h:g===a?t-d:u;d+=p,f.push(p);const m=n.disableWrapAround&&g>0?null:this._fetchPixels(r,p,i,n);o.push(m)}const p=(await Promise.all(o)).map((e=>null===e||void 0===e?void 0:e.pixelBlock));let m=null;const y={width:t,height:i};return m=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:y,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:f},n)).pixelBlock:(0,Y.us)(p,y,{blockWidths:f}),{extent:e,srcExtent:(0,A.tB)(e,this.rasterInfo.spatialReference,n.datumTransformation),pixelBlock:m}}async fetchRawPixels(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};t={x:Math.floor(t.x),y:Math.floor(t.y)};const r=await this._fetchRawTiles(e,t,i,n),{nativeExtent:s,nativePixelSize:a,storageInfo:o}=this.rasterInfo,l=2**e,c=a.x*l,u=a.y*l,h=new Q.Z({xmin:s.xmin+c*t.x,xmax:s.xmin+c*(t.x+i.width-1),ymin:s.ymax-u*(t.y+i.height-1),ymax:s.ymax-u*t.y,spatialReference:s.spatialReference});if(!r)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:d,mosaicSize:f}=r;if(1===d.length&&null!=d[0]&&d[0].width===i.width&&d[0].height===i.height)return{extent:h,srcExtent:h,pixelBlock:r.pixelBlocks[0]};const p=e>0?o.pyramidBlockWidth:o.blockWidth,m=e>0?o.pyramidBlockHeight:o.blockHeight,y={x:t.x%p,y:t.y%m};let g;return g=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:d,srcMosaicSize:f,destDimension:i,clipOffset:y,clipSize:i,coefs:null,sampleSpacing:null,interpolation:n.interpolation,alignmentInfo:null,blockWidths:null},n)).pixelBlock:(0,Y.us)(d,f,{clipOffset:y,clipSize:i}),{extent:h,srcExtent:h,pixelBlock:g}}fetchRawTile(e,t,i,n){throw new a.Z("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return(0,A.tB)(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?(0,V.J)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t){var i,n;let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const{customFetchParameters:s}=this.ioConfig,{range:a,query:o,headers:l}=t;r=null!==(i=null!==(n=r)&&void 0!==n?n:t.retryCount)&&void 0!==i?i:this.ioConfig.retryCount;const c=a?{Range:"bytes=".concat(a.from,"-").concat(a.to)}:null;try{return await(0,b.Z)(e,{...t,query:{...o,...s},headers:{...l,...c}})}catch(L){if(r>0)return r--,this.request(e,t,r);throw L}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;return null==t||null==e||0===e.length?null:(0,J.gk)(e,t)}getTileExtentFromTileInfo(e,t,i,n){const r=n.lodAt(e);return this.getTileExtent({x:r.resolution,y:r.resolution},t,i,n.origin,n.spatialReference,n.size)}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:n}=this.rasterInfo,{pyramidResolutions:r}=e;if(!e.tileInfo){const s=[],a=e.maximumPyramidLevel||0;let o=(n.x+n.y)/2,l=1/.0254*96*o;for(let e=0;e<=a&&(s.unshift(new N.Z({level:a-e,resolution:o,scale:l})),e!==a);e++)if(r){const t=(r[e].x+r[e].y)/2;l*=t/o,o=t}else o*=2,l*=2;const c=new E.Z({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new O.Z({origin:c,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:s}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:512,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:512,n=arguments.length>3?arguments[3]:void 0;const{width:r,height:s,nativeExtent:a,pixelSize:o,spatialReference:l}=e,c=new E.Z({x:a.xmin,y:a.ymax,spatialReference:l});null==n&&(n=Math.max(0,Math.round(Math.log(Math.max(r,s))/Math.LN2-8)));const u=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[o],n);e.storageInfo=new Z.Z({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:n,blockBoundary:u})}async computeBestPyramidLevelForLocation(e){return 0}computeBlockBoundary(e,t,i,n,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:2;if(1===r.length&&s>0){r=[...r];let{x:e,y:t}=r[0];for(let i=0;i<s;i++)e*=a,t*=a,r.push({x:e,y:t})}const o=[],{x:l,y:c}=n;for(let u=0;u<r.length;u++){const{x:n,y:s}=r[u];o.push({minCol:Math.floor((e.xmin-l+.1*n)/t/n),maxCol:Math.floor((e.xmax-l-.1*n)/t/n),minRow:Math.floor((c-e.ymax+.1*s)/i/s),maxRow:Math.floor((c-e.ymin-.1*s)/i/s)})}return o}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:n}=this.rasterInfo.storageInfo;if(0===e)return t;if(null!=i&&i.length)return i[e-1];const r=n**e;return{x:t.x*r,y:t.y*r}}identifyPixelLocation(e,t,i,n){const{spatialReference:r,nativeExtent:s,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:o,origin:l,transposeInfo:c}=a,u=n&&null!=c?c.tileSize[0]:a.blockWidth,h=n&&null!=c?c.tileSize[1]:a.blockHeight,d=(0,A.nF)(e,r,i);if(!s.intersects(d))return null;if(t<0||t>o)return null;const f=this.getPyramidPixelSize(t),{x:p,y:m}=f,y=(l.y-d.y)/m/h,g=(d.x-l.x)/p/u,v=Math.min(h-1,Math.floor((y-Math.floor(y))*h)),x=Math.min(u-1,Math.floor((g-Math.floor(g))*u));return{pyramidLevel:t,row:Math.floor(y),col:Math.floor(g),rowOffset:v,colOffset:x,blockWidth:u,srcLocation:d}}getTileExtent(e,t,i,n,r,s){const[a,o]=s,l=n.x+i*a*e.x,c=l+a*e.x,u=n.y-t*o*e.y,h=u-o*e.y;return new Q.Z({xmin:l,xmax:c,ymin:h,ymax:u,spatialReference:r})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const n=this.rasterInfo.storageInfo.blockBoundary[e];return!n||n.maxRow<t||n.maxCol<i||n.minRow>t||n.minCol>i}updateImageSpaceRasterInfo(e){const{extent:t,pixelSize:i}=e;if(-.5===t.xmin&&.5===t.ymax&&1===i.x&&1===i.y&&null==e.transform)return;const{width:n,height:r}=e,s=$.Z.WebMercator;e.spatialReference=s,e.extent=e.nativeExtent=new Q.Z({xmin:-.5,ymax:.5,xmax:n-.5,ymin:.5-r,spatialReference:s}),e.isPseudoSpatialReference=!0,e.transform=null,e.pixelSize=new E.Z({x:1,y:1,spatialReference:s});const{extent:a,storageInfo:o}=e;if(o){o.origin=new E.Z({x:a.xmin,y:a.ymax,spatialReference:s});const{pyramidResolutions:t,tileInfo:n}=o;if(t&&t.forEach((e=>{e.x/=i.x,e.y/=i.y})),n){n.origin=o.origin;const t=(e.nativePixelSize.x+e.nativePixelSize.y)/2;n.lods.forEach(((e,i)=>{e.resolution=t*2**i,e.scale=96*e.resolution/.0254}))}}}async _fetchPixels(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=(0,A.Hq)(e);if(r>=2)return{extent:e,pixelBlock:null};const s=this._getSourceDataInfo(e,t,i,n),{pyramidLevel:a,srcResolution:o,srcExtent:l,srcWidth:c,srcHeight:u,ul:h}=s;if(0===c||0===u)return{extent:e,srcExtent:l,pixelBlock:null};const{rasterInfo:d}=this,f=d.transform,p="gcs-shift"===(null===f||void 0===f?void 0:f.type),m=null!=(0,A.ut)(e.spatialReference);!p&&m||(r=(0,A.Hq)(s.srcExtent,p));const y=await this._fetchRawTiles(a,h,{width:c,height:u,wrapCount:r},n);if(!y)return{extent:e,srcExtent:l,pixelBlock:null};const g=d.storageInfo,v=a>0?g.pyramidBlockWidth:g.blockWidth,x=a>0?g.pyramidBlockHeight:g.blockHeight;let{x:w,y:b}=d.pixelSize;if(a>0){const{pyramidResolutions:e,pyramidScalingFactor:t}=g;if(null!=e&&e[a-1])({x:w,y:b}=e[a-1]);else{const e=t**a;w*=e,b*=e}}const I=d.spatialReference,_=new E.Z({x:w,y:b,spatialReference:I}),R=v===c&&x===u&&h.x%v==0&&h.y%x==0,S=new E.Z({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),T=!e.spatialReference.equals(I),C=I.isGeographic?1e-9:1e-4,{datumTransformation:k}=n;if(!T&&R&&1===y.pixelBlocks.length&&v===t&&x===i&&function(e,t,i){return Math.abs(e.x-t.x)<i&&Math.abs(e.y-t.y)<i}(o,S,C))return{extent:e,srcExtent:l,srcTilePixelSize:_,pixelBlock:y.pixelBlocks[0]};const F=m&&null!=(0,A.ut)(l.spatialReference)&&this._hasNoneOrGCSShiftTransform,M=n.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");M&&!this.rasterJobHandler&&await(0,A.zD)();const O=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:y.extent,pixelSize:S.toJSON(),datumTransformation:k,rasterTransform:f,hasWrapAround:r>0||F,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:M},n):(0,A.Qp)({projectedExtent:e,srcBufferExtent:y.extent,pixelSize:S,datumTransformation:k,rasterTransform:f,hasWrapAround:r>0||F,isAdaptive:!1,includeGCSGrid:M});let P;const D=!n.requestRawData,B={rows:O.spacing[0],cols:O.spacing[1]},N=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(a,y.extent.xmin):void 0,{pixelBlocks:Z,mosaicSize:J,isPartiallyFilled:z}=y;let L=null;if(this.rasterJobHandler){const e=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:Z,srcMosaicSize:J,destDimension:D?{width:t,height:i}:null,coefs:D?O.coefficients:null,sampleSpacing:D?B:null,projectDirections:M,gcsGrid:M?O.gcsGrid:null,isUV:"vector-uv"===this.rasterInfo.dataType,interpolation:n.interpolation,alignmentInfo:N,blockWidths:null},n);({pixelBlock:P,localNorthDirections:L}=e)}else{const e=(0,Y.us)(Z,J,{alignmentInfo:N});P=D?(0,Y.Uk)(e,{width:t,height:i},O.coefficients,B,n.interpolation):e,M&&O.gcsGrid&&(L=(0,Y.Qh)({width:t,height:i},O.gcsGrid),P=(0,K.xQ)(P,this.rasterInfo.dataType,L))}return n.requestRawData||M?{extent:e,srcExtent:l,srcTilePixelSize:_,pixelBlock:P,transformGrid:O,localNorthDirections:L,isPartiallyFilled:z}:{extent:e,srcExtent:l,srcTilePixelSize:_,pixelBlock:P}}async _fetchRawTiles(e,t,i,n){const{origin:r,blockBoundary:s}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:o}=this.getBlockWidthHeight(e);let{x:l,y:c}=t,{width:u,height:h,wrapCount:d}=i;const f=this._getRasterTileAlignmentInfo(e,0);n.buffer&&(l-=n.buffer.cols,c-=n.buffer.rows,u+=2*n.buffer.cols,h+=2*n.buffer.rows);let p=0,m=0,y=0;d&&null!=f&&(({worldColumnCountFromOrigin:m,originColumnOffset:y,rightPadding:p}=f),m*f.blockWidth-p>=l+u&&(p=0));const g=Math.floor(l/a),v=Math.floor(c/o),x=Math.floor((l+u+p-1)/a),w=Math.floor((c+h+p-1)/o),b=s[e];if(!b)return null;const{minRow:I,minCol:_,maxCol:R,maxRow:S}=b;if(0===d&&(w<I||x<_||v>S||g>R))return null;const T=new Array;let C=!1;const k=null==this.ioConfig.allowPartialFill?n.allowPartialFill:this.ioConfig.allowPartialFill;for(let N=v;N<=w;N++)for(let t=g;t<=x;t++){let i=t;if(!n.disableWrapAround&&d&&null!=f&&m<=t&&(i=t-m-y),N>=I&&i>=_&&S>=N&&R>=i){const t=this._tileFetchQueue.push({pyramidLevel:e,row:N,col:i,options:n},{signal:n.signal});k?T.push(new Promise((e=>{t.then((t=>e(t))).catch((()=>{C=!0,e(null)}))}))):T.push(t)}else T.push(Promise.resolve(null))}if(0===T.length)return null;const F=await Promise.all(T),M={height:(w-v+1)*o,width:(x-g+1)*a},{spatialReference:O}=this.rasterInfo,P=this.getPyramidPixelSize(e),{x:D,y:B}=P;return{extent:new Q.Z({xmin:r.x+g*a*D,xmax:r.x+(x+1)*a*D,ymin:r.y-(w+1)*o*B,ymax:r.y-v*o*B,spatialReference:O}),pixelBlocks:F,mosaicSize:M,isPartiallyFilled:C}}_fetchRawTile(e,t,i,n){const r=this.rasterInfo.storageInfo.blockBoundary[e];if(!r)return Promise.resolve(null);const{minRow:s,minCol:a,maxCol:o,maxRow:l}=r;if(t<s||i<a||t>l||i>o)return Promise.resolve(null);const u=H(this.rasterId,n.sliceId),h="".concat(e,"/").concat(t,"/").concat(i);let d=q(u,n.registryId,h);if(null==d){const r=new AbortController;d=this.fetchRawTile(e,t,i,{...n,signal:r.signal}),G(u,n.registryId,h,d,r),d.catch((()=>j(u,n.registryId,h)))}return n.signal&&(0,c.fu)(n,(()=>{W(u,n.registryId,h)})),d}_computeMagDirValues(e){var t;const{bandCount:i,dataType:n}=this.rasterInfo;if((2!==i||"vector-magdir"!==n)&&"vector-uv"!==n||2!==(null===e||void 0===e?void 0:e.length)||null===(t=e[0])||void 0===t||!t.length)return null;const r=e[0].length;if("vector-magdir"===n){const t=e[1].map((e=>(e+360)%360));return[e[0],t]}const[s,a]=e,o=[],l=[];for(let c=0;c<r;c++){const[e,t]=(0,K.Tg)([s[c],a[c]]);o.push(e),l.push(t)}return[o,l]}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlignmentInfo&&(this._rasterTileAlignmentInfo=(0,A.P_)(this.rasterInfo)),null==this._rasterTileAlignmentInfo.pyramidsInfo?null:{startX:t,halfWorldWidth:this._rasterTileAlignmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlignmentInfo.hasGCSSShiftTransform,...this._rasterTileAlignmentInfo.pyramidsInfo[e]}}_getSourceDataInfo(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const r={datumTransformation:n.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};n.srcResolution&&(r.srcResolution=n.srcResolution,this._updateSourceDataInfo(e,r));const s=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:o,pyramidLevel:l}=r,c=a/t,u=o/i,h=l<s&&c*u>=16,d=l===s&&this._requireTooManySrcTiles(a,o,t,i);if(h||d||0===a||0===o){const a=new E.Z({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference});let o=(0,A.VO)(a,this.rasterInfo.spatialReference,e,r.datumTransformation);const d=!o||n.srcResolution&&o.x+o.y<n.srcResolution.x+n.srcResolution.y;if(h&&n.srcResolution&&d){const e=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(s-l+3>=e){const t=2**e;o={x:n.srcResolution.x*t,y:n.srcResolution.y*t}}}o&&(r.srcResolution=o,this._updateSourceDataInfo(e,r))}return this._requireTooManySrcTiles(r.srcWidth,r.srcHeight,t,i)&&(r.srcWidth=0,r.srcHeight=0),r}_requireTooManySrcTiles(e,t,i,n){const{tileInfo:r}=this.rasterInfo.storageInfo,s=e/i,a=t/n;return Math.ceil(e/r.size[0])*Math.ceil(t/r.size[1])>=256*Math.max(1,(i+n)/1024)||s>8||a>8}_updateSourceDataInfo(e,t){t.srcWidth=0,t.srcHeight=0;const{rasterInfo:i}=this,n=i.spatialReference,{srcResolution:r,datumTransformation:s}=t,{pyramidLevel:a,pyramidResolution:o,excessiveReading:l}=(0,A.kr)(r,i,this.ioConfig.sampling);if(l)return;let c=t.srcExtent||(0,A.tB)(e,n,s);if(null==c)return;const u=i.transform;u&&(c=u.inverseTransform(c)),t.srcExtent=c;const{x:h,y:d}=i.storageInfo.origin,f=Math.floor((c.xmin-h)/o.x+.1),p=Math.floor((d-c.ymax)/o.y+.1),m=Math.floor((c.xmax-h)/o.x-.1),y=Math.floor((d-c.ymin)/o.y-.1),g=c.width<.1*o.x?0:m-f+1,v=c.height<.1*o.y?0:y-p+1;t.pyramidLevel=a,t.pyramidResolution=o,t.srcWidth=g,t.srcHeight=v,t.ul={x:f,y:p}}_getRequestOptionsWithSliceId(e){return null!=this.rasterInfo.multidimensionalInfo&&null==e.sliceId&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)}),e}_processIdentifyResult(e,t){const{srcLocation:i,position:n,pyramidLevel:r,useTransposedTile:s}=t,a=e.pixels[0].length/e.width/e.height;if(e.mask&&!e.mask[n])return{location:i,value:null};const{multidimensionalInfo:o}=this.rasterInfo;if(null==o||!s){const t=e.pixels.map((e=>e[n])),s={location:i,value:t,pyramidLevel:r},a=this._computeMagDirValues(t.map((e=>[e])));return null!==a&&void 0!==a&&a.length&&(s.magdirValue=a.map((e=>e[0]))),s}let l=e.pixels.map((e=>e.slice(n*a,n*a+a))),c=this._computeMagDirValues(l);const{requestSomeSlices:u,identifyOptions:h}=t;let d=(0,J.MO)(o,h.transposedVariableName);if(u){var f;const e=(0,J.Ur)(d,h.multidimensionalDefinition,h.timeExtent);l=l.map((t=>e.map((e=>t[e])))),c=null===(f=c)||void 0===f?void 0:f.map((t=>e.map((e=>t[e])))),d=e.map((e=>d[e]))}const p=e.noDataValues||this.rasterInfo.noDataValue,m={pixels:l,pixelType:e.pixelType};let y;return null!=p&&((0,U.Ao)(m,p),y=m.mask),{location:i,value:null,dataSeries:d.map(((e,t)=>{var i,n;const r={value:0===(null===(i=y)||void 0===i?void 0:i[t])?null:l.map((e=>e[t])),multidimensionalDefinition:e.multidimensionalDefinition.map((e=>new C.Z({...e,isSlice:!0})))};return null!==(n=c)&&void 0!==n&&n.length&&(r.magdirValue=[c[0][t],c[1][t]]),r})),pyramidLevel:r}}};(0,n._)([(0,h.Cb)()],te.prototype,"_rasterTileAlignmentInfo",void 0),(0,n._)([(0,h.Cb)()],te.prototype,"_tileFetchQueue",void 0),(0,n._)([(0,h.Cb)({readOnly:!0})],te.prototype,"_isGlobalWrappableSource",null),(0,n._)([(0,h.Cb)({readOnly:!0})],te.prototype,"_hasNoneOrGCSShiftTransform",null),(0,n._)([(0,h.Cb)()],te.prototype,"rasterJobHandler",null),(0,n._)([(0,h.Cb)({readOnly:!0})],te.prototype,"rasterId",null),(0,n._)([(0,h.Cb)(T.HQ)],te.prototype,"url",null),(0,n._)([(0,h.Cb)({type:String,json:{write:!0}})],te.prototype,"datasetName",void 0),(0,n._)([(0,h.Cb)({type:String,json:{write:!0}})],te.prototype,"datasetFormat",void 0),(0,n._)([(0,h.Cb)()],te.prototype,"hasUniqueSourceStorageInfo",void 0),(0,n._)([(0,h.Cb)()],te.prototype,"rasterInfo",void 0),(0,n._)([(0,h.Cb)()],te.prototype,"ioConfig",void 0),(0,n._)([(0,h.Cb)()],te.prototype,"sourceJSON",void 0),te=(0,n._)([(0,m.j)("esri.layers.support.rasterDatasets.BaseRaster")],te);const ie=te;var ne=i(68860),re=i(99278);async function se(e,t,n){if("extent"===n.type)return function(e,t,i){const{width:n,height:r}=e,s=new Uint8Array(n*r),a=t.width/n,o=t.height/r;if(i.width/a<.5||i.height/o<.5)return new re.Z({pixelType:e.pixelType,width:n,height:r,mask:s,pixels:[...e.pixels]});const{xmin:l,xmax:c,ymin:u,ymax:h}=t,{xmin:d,xmax:f,ymin:p,ymax:m}=i,y=Math.max(l,d),g=Math.min(c,f),v=Math.max(u,p),x=Math.min(h,m),w=.5*a,b=.5*o;if(g-y<w||x-v<b||g<l+w||y>c-w||v>h-b||x<u+b)return new re.Z({pixelType:e.pixelType,width:n,height:r,mask:s,pixels:[...e.pixels]});const I=Math.max(0,(y-l)/a),_=Math.min(n,Math.max(0,(g-l)/a)),R=Math.max(0,(h-x)/o),S=Math.min(r,Math.max(0,(h-v)/o)),T=Math.round(I),C=Math.round(_)-1,k=Math.round(R),F=Math.round(S)-1;if(T===C&&I%1>.5&&_%1<.5||k===F&&R%1>.5&&S%1<.5)return new re.Z({pixelType:e.pixelType,width:n,height:r,mask:s,pixels:[...e.pixels]});if(0===T&&0===k&&C===n&&F===r)return e;const M=e.mask;for(let O=k;O<=F;O++)for(let e=T;e<=C;e++){const t=O*n+e;s[t]=M?M[t]:255}return new re.Z({pixelType:e.pixelType,width:n,height:r,mask:s,pixels:[...e.pixels]})}(e,t,n);const{width:r,height:s}=e,a=new Uint8Array(r*s),{contains:o,intersects:l}=await Promise.all([i.e(9058),i.e(2170)]).then(i.bind(i,2170));return l(t,n)?"polyline"===n.type?function(e,t,i){const{width:n,height:r}=e,s=new Uint8Array(n*r),a=t.width/n,o=t.height/r,{xmin:l,ymax:c}=t,{paths:u}=i,h=e.mask;for(let d=0;d<u.length;d++){const e=u[d];for(let t=0;t<e.length-1;t++){const[i,u]=e[t],[d,f]=e[t+1];let p=Math.floor((c-u)/o),m=Math.floor((c-f)/o);if(m<p){const e=p;p=m,m=e}p=Math.max(0,p),m=Math.min(r-1,m);const y=(d-i)/(f-u);for(let e=p;e<=m;e++){const t=e===p?Math.max(u,f):(r+1-e)*o,c=e===m?Math.min(u,f):t-o;let g=f===u?Math.floor((i-l)/a):Math.floor((y*(t-u)+i-l)/a),v=f===u?Math.floor((d-l)/a):Math.floor((y*(c-u)+i-l)/a);if(v<g){const e=g;g=v,v=e}const x=e*n;g=Math.max(0,g),v=Math.min(n-1,v);for(let e=x+g;e<=x+v;e++)s[e]=h?h[e]:255}}}return new re.Z({pixelType:e.pixelType,width:n,height:r,mask:s,pixels:[...e.pixels]})}(e,t,n):o(n,t)?e:function(e,t,i){if(!e)return e;const{width:n,height:r}=e,s=t.width/n,a=t.height/r,{xmin:o,ymax:l}=t;let c;if("extent"===i.type){const e=(i.xmin-o)/s,t=(i.xmax-o)/s,n=(l-i.ymax)/a,r=(l-i.ymin)/a;c=[[[e,n],[e,r],[t,r],[t,n],[e,n]]]}else c=i.rings.map((e=>e.map((e=>{let[t,i]=e;return[(t-o)/s,(l-i)/a]}))));const u=document.createElement("canvas");u.width=n,u.height=r;const h=u.getContext("2d");h.fillStyle="#f00",h.beginPath(),c.forEach((e=>{h.moveTo(e[0][0],e[0][1]);for(let t=0;t<e.length;t++)h.lineTo(e[t][0],e[t][1]);h.closePath()})),h.fill();const d=h.getImageData(0,0,n,r).data,f=e.mask,p=n*r,m=new Uint8Array(p);for(let y=0;y<p;y++)f&&!f[y]||(m[y]=d[4*y+3]>127?255:0);return new re.Z({pixelType:e.pixelType,width:n,height:r,mask:m,maskIsAlpha:!1,pixels:[...e.pixels]})}(e,t,n):new re.Z({pixelType:e.pixelType,width:r,height:s,mask:a,maskIsAlpha:!1,pixels:[...e.pixels]})}function ae(e,t,i){let n=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const{spatialReference:r}=e,{x:s,y:a}=function(e,t){if(e.spatialReference.equals(t))return e;const i=(0,ne.c9)(e.spatialReference),n=(0,ne.c9)(t);if(i===n)return e;const r=i/n;return{x:e.x*r,y:e.y*r}}(i,r);let o,l,c;const u="extent"===t.type?t:t.extent;let{xmin:h,xmax:d,ymax:f,ymin:p}=u;const{xmin:m,ymax:y}=e.extent;return n?(h=m+(h>m?s*Math.round((h-m)/s):0),f=y-(f<y?a*Math.round((y-f)/a):0),d=m+(d>m?s*Math.round((d-m)/s):0),p=y-(p<y?a*Math.round((y-p)/a):0),o=new Q.Z({xmin:h,ymax:f,xmax:d,ymin:p,spatialReference:r}),l=Math.round(o.width/s),c=Math.round(o.height/a)):(l=Math.floor((d-h)/s+.8),c=Math.floor((f-p)/a+.8),h=m+(h>m?s*Math.floor((h-m)/s+.1):0),f=y-(f<y?a*Math.floor((y-f)/a+.1):0),d=h+l*s,p=f-c*a,o=new Q.Z({xmin:h,ymax:f,xmax:d,ymin:p,spatialReference:r})),{extent:o,width:l,height:c}}var oe=i(49818);let le=class extends ie{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null,this._clippingGeometry=new Map}async open(e){var t,i,n,r;await this.init();const{rasterFunction:s}=this;null!==(t=this.primaryRasters)&&void 0!==t&&null!==(t=t.rasters)&&void 0!==t&&t.length?s.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=s.getPrimaryRasters(),this.rasterJobHandler&&(null===(i=this.primaryRasters.rasters)||void 0===i||i.forEach((e=>e.rasterJobHandler=this.rasterJobHandler))));const{rasters:o,rasterIds:l}=this.primaryRasters,c=o.map((t=>t.rasterInfo?void 0:t.open(e)));await Promise.all(c);const u=o.map((e=>{let{rasterInfo:t}=e;return t})),h=s.bind({rasterInfos:u,rasterIds:l});if(s.rawSourceRasterInfos=u,!h.success||0===u.length)throw new a.Z("raster-function:open","cannot bind the function: ".concat(null!==(n=h.error)&&void 0!==n?n:""));const d="Table"===s.functionName?s:null===(r=s.functionArguments)||void 0===r?void 0:r.raster;"Table"===(null===d||void 0===d?void 0:d.functionName)&&(s.rasterInfo.attributeTable=oe.Z.fromJSON(d.functionArguments.attributeTableAsRecordSet)),await this.syncJobHandler();const f=u[0];this.hasUniqueSourceStorageInfo=1===u.length||u.slice(1).every((e=>function(e,t){const{storageInfo:i,pixelSize:n,spatialReference:r,extent:s}=e,{storageInfo:a,pixelSize:o,spatialReference:l,extent:c}=t;return n.x===o.x&&n.y===o.y&&r.equals(l)&&s.equals(c)&&i.blockHeight===a.blockHeight&&i.blockWidth===a.blockWidth&&i.maximumPyramidLevel===a.maximumPyramidLevel}(e,f))),this.set("sourceJSON",o[0].sourceJSON),this.set("rasterInfo",s.rasterInfo),await this._updateClipGeometry()}async syncJobHandler(){var e;return null===(e=this.rasterJobHandler)||void 0===e?void 0:e.updateRasterFunction(this.rasterFunction)}async fetchPixels(e,t,i){var n,r,s;let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{rasters:o,rasterIds:l}=this.primaryRasters;let c=!1;const{interpolation:u}=a,h=null===(n=this.rasterFunction.flatWebGLFunctionChain)||void 0===n?void 0:n.hasFocalFunction;!a.requestRawData&&h&&(c=1===o.length&&!a.skipRasterFunction,a={...a,interpolation:"bilinear",requestRawData:c});const d=o.map((n=>n.fetchPixels(e,t,i,a))),f=await Promise.all(d),p=f.map((e=>e.pixelBlock)),m=c||a.requestRawData?f.map((e=>e.srcTilePixelSize)):null;if(a.skipRasterFunction||p.every((e=>null==e)))return f[0];const y=null!==(r=null===(s=f.find((e=>null!=e.pixelBlock)))||void 0===s?void 0:s.extent)&&void 0!==r?r:e;let g=this.rasterJobHandler?await this.rasterJobHandler.process({extent:y,primaryPixelBlocks:p,primaryPixelSizes:m,primaryRasterIds:l}):this.rasterFunction.process({extent:y,primaryPixelBlocks:p,primaryPixelSizes:m,primaryRasterIds:l});const{transformGrid:v}=f[0];if(!c||null==g||null==v){const e=a.noClip?null:this.getClippingGeometry(y.spatialReference);return a.noClip||a.requestRawData||null==g||!e||(g=await se(g,y,e)),{...f[0],pixelBlock:g}}const x={rows:v.spacing[0],cols:v.spacing[1]};let w;w=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[g],srcMosaicSize:{width:g.width,height:g.height},destDimension:{width:t,height:i},coefs:v.coefficients,sampleSpacing:x,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:u,alignmentInfo:void 0,blockWidths:null},a)).pixelBlock:(0,Y.Uk)(g,{width:t,height:i},v.coefficients,x,u);const b=a.noClip?null:this.getClippingGeometry(e.spatialReference);return a.noClip||a.requestRawData||null==w||null==b||(w=await se(w,e,b)),{extent:e,srcExtent:f[0].srcExtent,pixelBlock:w}}getClippingGeometry(e){const t=this._clippingGeometry.get("0");if(!e||!t)return t;const i=function(e){var t,i;return String(null!==(t=null!==(i=e.wkid)&&void 0!==i?i:e.wkt)&&void 0!==t?t:e.wkt2)}(e);let n=this._clippingGeometry.get(i);return null!=n||(n=e.equals(t.spatialReference)?t:(0,A.Wt)(t,e),this._clippingGeometry.set(i,n)),n}async _updateClipGeometry(){const e=this.rasterFunction.getClippingGeometries()[0];let t=null===e||void 0===e?void 0:e.clippingGeometry;if(t&&"inside"===e.clippingType){const{extent:e}=this.rasterInfo,{difference:n,densify:r}=await Promise.all([i.e(9058),i.e(2170)]).then(i.bind(i,2170));let s=r(P.Z.fromExtent(e),2*(e.width+e.height)/40);s=(0,A.Wt)(s,t.spatialReference),t=n(s,t)}this._clippingGeometry.clear(),t&&this._clippingGeometry.set("0",t)}};(0,n._)([(0,h.Cb)({type:String,json:{write:!0}})],le.prototype,"datasetFormat",void 0),(0,n._)([(0,h.Cb)()],le.prototype,"tileType",void 0),(0,n._)([(0,h.Cb)()],le.prototype,"rasterFunction",void 0),(0,n._)([(0,h.Cb)()],le.prototype,"primaryRasters",void 0),le=(0,n._)([(0,m.j)("esri.layers.support.rasterDatasets.FunctionRaster")],le);const ce=le;var ue=i(8554),he=i(21449),de=i(73425),fe=i(43238),pe=i(50254),me=i(55185);const ye=e=>{let t=class extends e{constructor(){var e;super(...arguments),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster="Function"===(null===(e=arguments.length<=0?void 0:arguments[0])||void 0===e||null===(e=e.raster)||void 0===e?void 0:e.datasetFormat)}get fullExtent(){var e;return null===(e=this.serviceRasterInfo)||void 0===e?void 0:e.extent}set multidimensionalDefinition(e){this._set("multidimensionalDefinition",e),this.updateRenderer()}set rasterFunction(e){var t;"none"===(null===(t=e)||void 0===t||null===(t=t.functionName)||void 0===t?void 0:t.toLowerCase())&&(e=void 0),this._set("rasterFunction",e),this.updateRasterFunction()}get rasterInfo(){return(0,I.Mr)(o.Z.getLogger(this),"rasterInfo",{replacement:"serviceRasterInfo",version:"4.29",warnOnce:!0}),this._get("serviceRasterInfo")}set url(e){this._set("url",(0,S.Nm)(e,o.Z.getLogger(this)))}set renderer(e){null==e&&null==this.rasterFunction?this._configDefaultRenderer("override"):(this._set("renderer",e),this.updateRenderer())}readRenderer(e,t,i){var n;const r=null===t||void 0===t||null===(n=t.layerDefinition)||void 0===n||null===(n=n.drawingInfo)||void 0===n?void 0:n.renderer;return(0,w.ij)(r,i)||void 0}async convertVectorFieldData(e,t){const{serviceRasterInfo:i}=this;if(null==e||!i)return null;const n=this._rasterJobHandler.instance,r=i.dataType;return n?n.convertVectorFieldData({pixelBlock:e,dataType:r},t):(0,K.KC)(e,r)}async computeStatisticsHistograms(e,t){var i;await this.load(t),e=(0,d.TJ)(pe.Z,e).clone();const{serviceRasterInfo:n}=this;if(null==n)throw new a.Z("imagery-tile-mixin:compute-statistics-histograms","serviceRasterInfo must be specified");const{geometry:r}=e;if(null==r)throw new a.Z("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let s=r;const{spatialReference:o}=n;r.spatialReference.equals(o)||(await(0,A.zD)(),s="extent"===r.type?(0,A.tB)(r,o):(0,A.Wt)(r,o));const l=null!==(i=e.pixelSize)&&void 0!==i?i:new E.Z({x:n.pixelSize.x,y:n.pixelSize.y,spatialReference:o}),{extent:c,width:u,height:h}=ae(n,s,l),f=await this.fetchPixels(c,u,h,{...t,interpolation:"nearest"});if(null==f.pixelBlock)throw new a.Z("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");const p=await se(f.pixelBlock,c,s),m=this._rasterJobHandler.instance;return m?m.computeStatisticsHistograms({pixelBlock:p},t):(0,he.js)(p)}async createFlowMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createFlowMesh(e,t):(0,me.GE)(e.meshType,e.simulationSettings,e.flowData,null!=t.signal?t.signal:(new AbortController).signal)}normalizeRasterFetchOptions(e){var t,i;const{multidimensionalInfo:n}=null!==(t=this.serviceRasterInfo)&&void 0!==t?t:{};if(null==n)return e;let r=e.multidimensionalDefinition||this.multidimensionalDefinition;(null===(i=r)||void 0===i?void 0:i.length)||(r=(0,J.Tj)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const s=e.timeExtent||this.timeExtent;if(null!=r&&null!=s&&(null!=s.start||null!=s.end)){var a;r=r.map((e=>e.clone()));const t=null===(a=n.variables.find((e=>{let{name:t}=e;return t===r[0].variableName})))||void 0===a||null===(a=a.dimensions)||void 0===a?void 0:a.find((e=>{let{name:t}=e;return"StdTime"===t})),i=r.find((e=>{let{dimensionName:t}=e;return"StdTime"===t}));if(!t||!i)return{...e,multidimensionalDefinition:null};const{start:o,end:l}=s,c=null==o?null:o.getTime(),u=null==l?null:l.getTime(),h=null!==c&&void 0!==c?c:u,d=null!==u&&void 0!==u?u:c;if(null!=t.values){const e=t.values.filter((e=>{if(Array.isArray(e)){if(h===d)return e[0]<=h&&e[1]>=h;const t=e[0]<=h&&e[1]>h||e[0]<d&&e[1]>=d,i=e[0]>=h&&e[1]<=d||e[0]<h&&e[1]>d;return t||i}return h===d?e===h:e>=h&&e<=d}));if(e.length){const t=e.sort(((e,t)=>{const i=Array.isArray(e)?e[0]:e,n=Array.isArray(e)?e[1]:e,r=Array.isArray(t)?t[0]:t,s=Array.isArray(t)?t[1]:t;return h===d?i-r:Math.abs(n-d)-Math.abs(s-d)}))[0];i.values=[t]}else r=null}else if(t.hasRegularIntervals&&t.extent){const[e,n]=t.extent;h>n||d<e?r=null:i.values=h===d?[h]:[Math.max(e,h),Math.min(n,d)]}}return null!=r&&(0,J.nb)(r,this.multidimensionalSubset)?{...e,multidimensionalDefinition:null}:{...e,multidimensionalDefinition:r}}async updateRasterFunction(){if(!this.loaded||"imagery-tile"!==this.type||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&"Function"===this.raster.datasetFormat){var e;const t=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&t&&this._set("rasterFunction",F.Z.fromJSON(t)),void(this._cachedRasterFunctionJson=null===(e=this.rasterFunction)||void 0===e?void 0:e.toJSON())}let t,i=this.raster,n=!1;"Function"===i.datasetFormat?(t=i.primaryRasters.rasters,i=t[0],n=!0):t=[i];const{rasterFunction:r}=this;if(r){var s,a,o;const e={raster:i};t.length>1&&t.forEach((t=>e[t.url]=t));const n=(0,ue.Ue)(null!==(s=null===(a=r.functionDefinition)||void 0===a?void 0:a.toJSON())&&void 0!==s?s:r.toJSON(),e),l=new ce({rasterFunction:n});l.rasterJobHandler=this._rasterJobHandler.instance,await l.open(),this._cachedRasterFunctionJson=null===(o=this.rasterFunction)||void 0===o?void 0:o.toJSON(),this.raster=l}else this.raster=i,this._cachedRasterFunctionJson=null,await i.when();if(this._cachedRendererJson=null,!n&&!r)return;const{bandIds:l}=this,{bandCount:c}=this.raster.rasterInfo,u=null!==l&&void 0!==l&&l.length?l.some((e=>e>=c)):c>=3;l&&(u||this.renderer&&"raster-stretch"!==this.renderer.type)&&this._set("bandIds",null),this._configDefaultRenderer("auto")}async updateRenderer(){const{loaded:e,symbolizer:t}=this;if(!e||!t||!this.renderer)return;const{rasterInfo:i}=this.raster,n=(0,J.N3)(i,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),r=null===n||void 0===n?void 0:n.name,s=(0,de.ol)({...this.renderer.toJSON(),variableName:r});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(s))return;const a=this._rasterJobHandler.instance;a&&(t.rasterInfo=(0,de.FI)(i,r),t.rendererJSON=s,t.bind(),await a.updateSymbolizer(t),this._cachedRendererJson=s)}async applyRenderer(e,t){var i;const n=null===e||void 0===e?void 0:e.pixelBlock;if(!(null!=n&&n.pixels&&n.pixels.length>0))return null;let r;await this.updateRenderer();const s=this._rasterJobHandler.instance,a=null!==(i=this.bandIds)&&void 0!==i?i:[];return r=s?await s.symbolize({...e,simpleStretchParams:t,bandIds:a}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:a}),r}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?"".concat(this.url,"/tile/").concat(e,"/").concat(t,"/").concat(i):""}getCompatibleTileInfo(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!this.loaded||null==t)return null;if(i&&e.equals(this.spatialReference))return this.tileInfo;const n=(0,R.C5)(e);return O.Z.create({size:256,spatialReference:e,origin:n?{x:n.origin[0],y:n.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){var t;return this.loaded?(null!==(t=this._compatibleFullExtent)&&void 0!==t&&t.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,n){var r;let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(i(this),s.requestAsImageElement){const i=this.getTileUrl(e,t,n);return(0,b.Z)(i,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:s.signal}).then((e=>e.data))}const{serviceRasterInfo:a}=this;if(null!=a.multidimensionalInfo&&null==(s=this.normalizeRasterFetchOptions(s)).multidimensionalDefinition){const i=s.tileInfo||a.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,t,n,i),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),"raster-shaded-relief"===(null===(r=this.renderer)||void 0===r?void 0:r.type)&&(s={...s,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,t,n,s)}async fetchPixels(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return null!=this.serviceRasterInfo.multidimensionalInfo&&null==(n=this.normalizeRasterFetchOptions(n)).multidimensionalDefinition?{extent:e,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),t=Math.round(t),i=Math.round(i),this.raster.fetchPixels(e,t,i,n))}async identify(e){var t;let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};await this.load();const{raster:n,serviceRasterInfo:r}=this;if(null!=(null===r||void 0===r?void 0:r.multidimensionalInfo)&&(!r.hasMultidimensionalTranspose||!((0,J.WU)(i.multidimensionalDefinition)||i.transposedVariableName||i.timeExtent))&&null==(i=this.normalizeRasterFetchOptions(i)).multidimensionalDefinition)return{location:e,value:null};const s=null===(t=this.multidimensionalSubset)||void 0===t?void 0:t.areaOfInterest;if(s&&!s.contains(e))throw new a.Z("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return n.identify(e,i)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var e,t,i;const n=null===(e=this.serviceRasterInfo)||void 0===e?void 0:e.multidimensionalInfo;if(null==n||"standard-time"!==(null===(t=this.serviceRasterInfo)||void 0===t?void 0:t.dataType))return!1;const r=this.multidimensionalDefinition,s=null===r||void 0===r||null===(i=r[0])||void 0===i?void 0:i.variableName;return n.variables.some((e=>e.name===s&&(!(null!==r&&void 0!==r&&r[0].dimensionName)||e.dimensions.some((e=>"StdTime"===e.name)))))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(e){var t;const i=null!==e&&void 0!==e?e:null===(t=this.serviceRasterInfo)||void 0===t?void 0:t.multidimensionalInfo;return(0,J.jj)(this.multidimensionalSubset,i)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=(0,J.Tj)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&"Function"===this.raster.datasetFormat&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new M.Z;return this._rasterJobHandler.connectionPromise=e.initialize().then((async()=>{i(this),this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,"Function"===this.raster.datasetFormat&&this.raster.syncJobHandler(),this.rasterFunction&&await this.updateRasterFunction().catch((()=>{})),this.renderer&&this.updateRenderer()})).catch((()=>{})),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(null==this.interpolation){var e;i(this);const{raster:t}=this,n=(0,de.In)(t.rasterInfo,t.tileType,null===(e=this.sourceJSON)||void 0===e?void 0:e.defaultResamplingMethod);this._set("interpolation",n)}}_configDefaultRenderer(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"no";i(this);const{rasterInfo:t}=this.raster;!this.bandIds&&t.bandCount>1&&(this.bandIds=(0,de.YD)(t));const n=(0,J.N3)(t,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),r=null===n||void 0===n?void 0:n.name,s=(0,de.Ko)(this.raster);if(!this.renderer||"override"===e){var a,l;const e=(0,de.Ob)(t,{bandIds:this.bandIds,variableName:r,rasterFunctionColorRamp:s}),i=t.statistics,n=i&&i.length>0?i[0]:null,o=null!==(a=null===n||void 0===n?void 0:n.max)&&void 0!==a?a:0,c=null!==(l=null===n||void 0===n?void 0:n.min)&&void 0!==l?l:0;"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===e.type&&(o>1e24||c<-1e24)&&(e.dynamicRangeAdjustment=!0,e.statistics=null,"none"===e.stretchType&&(e.stretchType="min-max")),this.renderer=e}const c=(0,de.ol)({...this.renderer.toJSON(),variableName:r}),u=(0,de.FI)(t,r);this.symbolizer?(this.symbolizer.rendererJSON=c,this.symbolizer.rasterInfo=u):this.symbolizer=new fe.Z({rendererJSON:c,rasterInfo:u});const h=this.symbolizer.bind();if(h.success){if("auto"===e){const{colormap:e}=this.raster.rasterInfo,t=this.renderer;if(null!=e&&"raster-colormap"===t.type){const e=(0,de.Ob)(this.raster.rasterInfo);JSON.stringify(e)!==JSON.stringify(t)&&this._configDefaultRenderer("override")}else if("raster-stretch"===t.type){var d,f;const e=null===(d=this.bandIds)||void 0===d?void 0:d.length,i=null===(f=t.statistics)||void 0===f?void 0:f.length;!t.dynamicRangeAdjustment&&i&&e&&i!==e&&this._configDefaultRenderer("override")}}}else o.Z.getLogger(this).warn("imagery-tile-mixin",h.error||"The given renderer is not supported by the layer."),"auto"===e&&this._configDefaultRenderer("override")}};function i(e){if(!e.raster||!e.serviceRasterInfo)throw new a.Z("imagery-tile","no raster")}return(0,n._)([(0,h.Cb)({clonable:!1})],t.prototype,"_cachedRendererJson",void 0),(0,n._)([(0,h.Cb)({clonable:!1})],t.prototype,"_cachedRasterFunctionJson",void 0),(0,n._)([(0,h.Cb)({clonable:!1})],t.prototype,"_compatibleFullExtent",void 0),(0,n._)([(0,h.Cb)({clonable:!1})],t.prototype,"_isConstructedFromFunctionRaster",void 0),(0,n._)([(0,h.Cb)({clonable:!1})],t.prototype,"_rasterJobHandler",void 0),(0,n._)([(0,h.Cb)()],t.prototype,"bandIds",void 0),(0,n._)([(0,h.Cb)({json:{origins:{service:{read:{source:"copyrightText"}}}}})],t.prototype,"copyright",void 0),(0,n._)([(0,h.Cb)({json:{read:!1}})],t.prototype,"fullExtent",null),(0,n._)([(0,h.Cb)()],t.prototype,"interpolation",void 0),(0,n._)([(0,h.Cb)()],t.prototype,"ioConfig",void 0),(0,n._)([(0,h.Cb)({type:[C.Z],json:{write:!0}})],t.prototype,"multidimensionalDefinition",null),(0,n._)([(0,h.Cb)({type:k.Z,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),(0,n._)([(0,h.Cb)()],t.prototype,"raster",void 0),(0,n._)([(0,h.Cb)({type:F.Z,json:{name:"renderingRule",write:!0}})],t.prototype,"rasterFunction",null),(0,n._)([(0,h.Cb)({readOnly:!0})],t.prototype,"rasterInfo",null),(0,n._)([(0,h.Cb)()],t.prototype,"serviceRasterInfo",void 0),(0,n._)([(0,h.Cb)()],t.prototype,"sourceJSON",void 0),(0,n._)([(0,h.Cb)({readOnly:!0,type:$.Z,json:{read:!1}})],t.prototype,"spatialReference",void 0),(0,n._)([(0,h.Cb)({type:O.Z})],t.prototype,"tileInfo",void 0),(0,n._)([(0,h.Cb)(T.HQ)],t.prototype,"url",null),(0,n._)([(0,h.Cb)({types:w.dr,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var e;const t="raster-stretch"===(null===(e=this.renderer)||void 0===e?void 0:e.type)&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!t}}},origins:{"web-scene":{types:w.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],t.prototype,"renderer",null),(0,n._)([(0,_.r)("renderer")],t.prototype,"readRenderer",null),(0,n._)([(0,h.Cb)({clonable:!1})],t.prototype,"symbolizer",void 0),t=(0,n._)([(0,m.j)("esri.layers.mixins.ImageryTileMixin")],t),t};var ge=i(6061),ve=i(29598),xe=i(71684),we=i(56811),be=i(99063),Ie=i(83040),_e=i(60117),Re=i(51995),Se=i(36257);function Te(e){return["x","e","east","long","longitude"].includes(e.toLowerCase())}function Ce(e){return["y","n","west","lat","latitude"].includes(e.toLowerCase())}function ke(e){const{axes:t}=e.domain,i=Object.keys(t),n=[],r=[];let s=-1,a=-1,o=[];for(let v=0;v<i.length;v++){const e=i[v];Te(e)?s=v:Ce(e)&&(a=v);const l=t[e],c=[];if("values"in l){l.values.forEach((e=>c.push("string"==typeof e?new Date(e).getTime():e)));const e=c[1]-c[0];n.push([c[0]-.5*e,c[c.length-1]+.5*e]),r.push(e)}else{const{start:e,stop:t,num:i}=l,s=(t-e)/(i-1);n.push([e-.5*s,t+.5*s]),r.push(s);for(let n=0;n<i;n++)c.push(e+s*n)}o.push({name:e,values:c,extent:[c[0],c[c.length-1]]})}s>-1&&-1===a?a=0===s?1:0:a>-1&&-1===s?s=0===a?1:0:-1===a&&-1===s&&(s=0,a=1),o=o.filter(((e,t)=>!(t===s||t===a)));const{referencing:l}=e.domain,c=l.find((e=>e.coordinates.includes(i[s]))).system.id,u=null===c||void 0===c?void 0:c.slice(c.lastIndexOf("/")+1),h=null==u||"CRS84"===u?4326:Number(u),d=new $.Z({wkid:h}),[f,p]=n[s],[m,y]=n[a],g=new Q.Z({xmin:f,xmax:p,ymin:m,ymax:y,spatialReference:d});return{width:Math.round(g.width/r[s]),height:Math.round(g.height/r[a]),extent:g,dimensions:o}}function Fe(e){var t;const i=(0,Se.G3)();return i&&null!==(t=e[i])&&void 0!==t?t:Object.values(e)[0]}function Me(){return Math.round(255*Math.random())}function Oe(e){let t=Number.MAX_VALUE,i=-Number.MAX_VALUE;for(let n=0;n<e.length;n++){const r=e[n];null!=r&&(r<t&&(t=r),r>i&&(i=r))}return(0,U.JQ)(t,i)}function Pe(e,t,i){const n=e.map(((e,i)=>({name:e,count:t[i]}))).sort(((e,t)=>e.name>t.name?-1:1)),r=(s=1,e=>s*=e.count);var s;const a=[...n.slice(1),{name:"",count:1}].reverse().map(r).reverse();let o=0;for(let l=e.length-1;l>=0;l--)o+=a[n.findIndex((t=>{let{name:i}=t;return i===e[l]}))]*(i%t[l]),i=Math.floor(i/t[l]);return o}function De(e){var t;const{width:i,height:n,extent:r,dimensions:s}=ke(e),{ranges:a}=e,o=Object.keys(a).sort(((e,t)=>e<t?-1:1)),l=[];for(let f=0;f<o.length;f++){const e=o[f];(null===s||void 0===s?void 0:s.length)&&l.push({name:e,dimensions:s})}const c=function(e){const t={},{parameters:i}=e;if(!i)return t;for(const[s,a]of Object.entries(i)){var n;const{type:e,description:i,unit:o,categoryEncoding:l,observedProperty:c}=a;if("Parameter"===e&&(t[s]={},i&&(t[s].description=Fe(i)),o&&(t[s].unit=o.label?Fe(o.label):null,t[s].symbol=null===(n=o.symbol)||void 0===n?void 0:n.value),l)){var r;const e=Object.entries(l).map(((e,t)=>({OID:t,Value:Number(e[1]),ClassName:e[0].slice(e[0].lastIndexOf("/")+1),Count:1})));let i=!1;(null===c||void 0===c||null===(r=c.categories)||void 0===r?void 0:r.length)&&(c.categories.forEach((t=>{if(!t.id)return;const n=t.id.slice(t.id.lastIndexOf("/")+1),r=e.find((e=>e.ClassName===n));if(!r)return;const s=t.label?Fe(t.label):null;if(r.Label=s,t.preferredColor){const e=Re.Z.fromHex(t.preferredColor);e&&(i=!0,r.Red=e.r,r.Green=e.g,r.Blue=e.b)}})),i&&e.forEach((e=>{null==e.Red&&(e.Red=Me(),e.Green=Me(),e.Blue=Me())})));const n={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:e.map((e=>({attributes:e})))};i&&n.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),t[s].attributeTable=n}}return t}(e);l.forEach((e=>c[e.name]&&Object.assign(e,c[e.name])));const u=l.length?{variables:l}:void 0,h=[];for(let f=0;f<o.length;f++){const e=o[f],{values:t,dataType:r,axisNames:l,shape:c}=a[e],u=c.length>2?f*c.slice(0,-2).reduce(((e,t)=>e*t)):0,d=l.slice(0,-2),p=c.slice(0,-2),m="float"===r?"f32":Oe(t),y=i*n,g=t.length/y;for(let a=0;a<g;a++){const e=re.Z.createEmptyBand(m,y),r=new Uint8Array(y).fill(255);let o=!1;const l=a*y;for(let i=0;i<y;i++){const n=t[l+i];null==n?(r[i]=0,o=!0):e[i]=n}if(0===f||null!==s&&void 0!==s&&s.length){const t=new re.Z({width:i,height:n,mask:o?r:null,pixels:[e],pixelType:m});t.updateStatistics(),null!==s&&void 0!==s&&s.length?h[Pe(d,p,a)+u]=t:h.push(t)}else{const t=h[a];t.pixels.push(e),o?t.mask&&(t.mask=re.Z.combineBandMasks([t.mask,r])):t.mask=o?r:null}}}const d=null===(t=Object.values(c).find((e=>e.attributeTable)))||void 0===t?void 0:t.attributeTable;return{extent:r,pixelBlocks:h,multidimensionalInfo:u,attributeTable:d,bandNames:u?void 0:o}}var Be=i(53737);let Ne=class extends ie{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}async open(e){var t,i;await this.init();const n=this.source,{pixelBlocks:r,attributeTable:s,statistics:a,histograms:o,name:l,nativeExtent:c,transform:u}=n,h=r[0],{width:d,height:f,pixelType:p}=h,m=null!==(t=n.extent)&&void 0!==t?t:new Q.Z({xmin:-.5,ymin:.5,xmax:d-.5,ymax:f-.5,spatialReference:new $.Z({wkid:3857})}),y=null!==(i=n.isPseudoSpatialReference)&&void 0!==i?i:!n.extent,g={x:m.width/d,y:m.height/f},v={...n.keyProperties};s&&(v.DataType="Thematic");const x=new Be.Z({width:d,height:f,pixelType:p,extent:m,nativeExtent:c,attributeTable:s,transform:u,pixelSize:g,spatialReference:m.spatialReference,bandCount:h.pixels.length,keyProperties:v,multidimensionalInfo:n.multidimensionalInfo,statistics:a,isPseudoSpatialReference:y,histograms:o});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(x),this.createRemoteDatasetStorageInfo(x,512,512),this._set("rasterInfo",x),this.updateTileInfo(),x.multidimensionalInfo?await this._buildMDimStats(n.pixelBlocks,x.multidimensionalInfo):await this._buildInMemoryRaster(h,{width:512,height:512},e),x.multidimensionalInfo||(this.source=null),this.datasetName=l}fetchRawTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!this._pixelBlockTiles){const{rasterInfo:r}=this,[s,a]=r.storageInfo.tileInfo.size,{sliceId:o}=n,{pixelBlocks:l}=this.source,c={pixelBlock:null==o?l[0]:l[o],useBilinear:"thematic"!==r.dataType,tileSize:{width:s,height:a},level:e,row:t,col:i},u=this.rasterJobHandler?this.rasterJobHandler.clipTile(c,n):(0,Y.Uu)(c);return Promise.resolve(u)}const r=this._pixelBlockTiles.get("".concat(e,"/").concat(t,"/").concat(i));return Promise.resolve(r)}async _buildInMemoryRaster(e,t,i){var n,r,s;const{rasterInfo:o}=this,l=null!==(n=o.storageInfo.maximumPyramidLevel)&&void 0!==n?n:0,u="thematic"!==o.dataType,h=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:l,useBilinear:u},i):Promise.resolve((0,Y.Vl)(e,t,l,u)),d=null!=o.statistics,f=null!=o.histograms,p=this.ioConfig.skipStatistics||d?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve((0,he.Hv)(e)),m=await(0,c.as)([h,p]);if(!m[0].value&&m[1].value)throw new a.Z("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=m[0].value,d||(o.statistics=null===(r=m[1].value)||void 0===r?void 0:r.statistics),f||(o.histograms=null===(s=m[1].value)||void 0===s?void 0:s.histograms)}async _buildMDimStats(e,t,i){for(let n=0;n<t.variables.length;n++){const r=t.variables[n];if(r.statistics)continue;const s=r.dimensions.map((e=>{var t,i,n;return new C.Z({variableName:r.name,dimensionName:e.name,values:[null!==(t=null===(i=e.values)||void 0===i?void 0:i[0])&&void 0!==t?t:null===(n=e.extent)||void 0===n?void 0:n[0]],isSlice:!0})})),a=(0,J.gk)(s,t),o=null==a?null:e[a];if(null==o)continue;const l=this.rasterJobHandler?await this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:o},i):(0,he.js)(o);r.statistics=l.statistics,r.histograms||(r.histograms=l.histograms)}}};(0,n._)([(0,h.Cb)({type:String,json:{write:!0}})],Ne.prototype,"datasetFormat",void 0),(0,n._)([(0,h.Cb)()],Ne.prototype,"source",void 0),(0,n._)([(0,h.Cb)()],Ne.prototype,"url",null),Ne=(0,n._)([(0,m.j)("esri.layers.support.rasterDatasets.InMemoryRaster")],Ne);const Ze=Ne;let Je=class extends ie{constructor(){super(...arguments),this.datasetFormat="CovJSON"}async open(e){await this.init();const{extent:t,pixelBlocks:i,multidimensionalInfo:n,attributeTable:r,bandNames:s}=await this._fetchData(e),{statistics:a,histograms:o}=(0,he.js)(i[0]),l=null===s||void 0===s?void 0:s.map((e=>({BandName:e}))),c={DataType:r?"Thematic":n?"Scientific":"Generic",BandProperties:l},u=new Ze({source:{extent:t,pixelBlocks:i,attributeTable:r?oe.Z.fromJSON(r):null,multidimensionalInfo:n,statistics:a,histograms:o,keyProperties:c,isPseudoSpatialReference:!1}});await u.open(),this._inMemoryRaster=u;const h=this.source?"":this.url.slice(this.url.lastIndexOf("/")+1);this._set("datasetName",h.slice(0,h.indexOf("."))),this._set("rasterInfo",u.rasterInfo)}fetchRawTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this._inMemoryRaster.fetchRawTile(e,t,i,n)}async _fetchData(e){var t,i,n,r;const s=null!==(t=this.source)&&void 0!==t?t:(await this.request(this.url,{signal:null===e||void 0===e?void 0:e.signal})).data,o="imagery-tile-layer:open-coverage-json";if("coverage"!==(null===(i=s.type)||void 0===i?void 0:i.toLowerCase())||"grid"!==(null===(n=s.domain)||void 0===n||null===(n=n.domainType)||void 0===n?void 0:n.toLowerCase()))throw new a.Z(o,"Only coverage with Grid domain type is supported");if(!s.ranges)throw new a.Z(o,"Missing ranges in the grid coverage data");if(null===(r=s.domain.referencing)||void 0===r||!r.length)throw new a.Z(o,"Missing domain referencing in the grid coverage data");const l=Object.values(s.ranges);for(let c=0;c<l.length;c++){const{axisNames:e,shape:t,type:i,values:n}=l[c];if(!("ndarray"===i.toLowerCase()&&null!==n&&void 0!==n&&n.length&&null!==e&&void 0!==e&&e.length&&null!==t&&void 0!==t&&t.length))throw new a.Z(o,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!Te(e[e.length-1])||!Ce(e[e.length-2]))throw new a.Z(o,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return De(s)}};(0,n._)([(0,h.Cb)({type:String,json:{write:!0}})],Je.prototype,"datasetFormat",void 0),(0,n._)([(0,h.Cb)({constructOnly:!0})],Je.prototype,"source",void 0),Je=(0,n._)([(0,m.j)("esri.layers.support.rasterDatasets.CovJSONRaster")],Je);const Ae=Je;var Ee=i(63780);function ze(e,t){if(!e||!t)return[];let i=t;t.includes("/")?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const n=[];if(t){const r=ze(e,i);for(let e=0;e<r.length;e++)ze(r[e],t).forEach((e=>n.push(e)));return n}const r=e.getElementsByTagNameNS("*",i);if(!r||0===r.length)return[];for(let s=0;s<r.length;s++)n.push(r[s]||r.item(s));return n}function Le(e,t){if(!e||!t)return null;let i=t;t.includes("/")?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const n=ze(e,i);return n.length>0?t?Le(n[0],t):n[0]:null}function He(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const i=t?Le(e,t):e;let n;return i?(n=i.textContent||i.nodeValue,n?n.trim():null):null}function We(e,t){return function(e,t){const i=ze(e,t),n=[];let r;for(let s=0;s<i.length;s++)r=i[s].textContent||i[s].nodeValue,r&&(r=r.trim(),""!==r&&n.push(r));return n}(e,t).map((e=>Number(e)))}function qe(e,t){const i=He(e,t);return Number(i)}function Ge(e,t){var i;const n=null===e||void 0===e||null===(i=e.nodeName)||void 0===i?void 0:i.toLowerCase(),r=t.toLowerCase();return n.slice(n.lastIndexOf(":")+1)===r}var je=i(69405);function Ue(e,t){if(!e||!t)return null;const i=[];for(let n=0;n<e.length;n++)i.push(e[n]),i.push(t[n]);return i}function Ve(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new $.Z({wkid:t});if(e=String(e).trim(),(0,R.xl)(e))return new $.Z({wkt2:e});const i=e.toUpperCase();if(i.startsWith("COMPD_CS")){if(!i.includes("VERTCS")||!i.includes("GEOGCS")&&!i.startsWith("PROJCS"))return null;const n=i.indexOf("VERTCS"),r=i.indexOf("PROJCS"),s=r>-1?r:i.indexOf("GEOGCS");if(-1===s)return null;const a=e.slice(s,e.lastIndexOf("]",n)+1).trim(),o=e.slice(n,e.lastIndexOf("]")).trim();t=Ye(a);const l=new $.Z(t?{wkid:t}:{wkt:a}),c=Ye(o);return c&&(l.vcsWkid=c),l}return i.startsWith("GEOGCS")||i.startsWith("PROJCS")?(t=Ye(e),new $.Z(0!==t?{wkid:t}:{wkt:e})):null}function Ye(e){var t;const i=e.replaceAll("]","[").replaceAll('"',"").split("[").map((e=>e.trim())).filter((e=>""!==e)),n=i[i.length-1].split(","),r=null===(t=n[0])||void 0===t?void 0:t.toLowerCase();if(("epsg"===r||"esri"===r)&&e.endsWith('"]]')){const e=Number(n[1]);if(!isNaN(e)&&0!==e)return e}return 0}function Ke(e){var t;if("pamdataset"!==(null===e||void 0===e||null===(t=e.documentElement.tagName)||void 0===t?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(Ge(e,"SRS")){if(!i.spatialReference){const t=He(e);i.spatialReference=Ve(t)}}else if(Ge(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:n}=function(e){var t;const i=Le(e,"GeodataXform"),n=Ve(qe(i,"SpatialReference/WKID")||He(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:n,transform:null};const r=null!==(t=qe(i,"PolynomialOrder"))&&void 0!==t?t:1,s=We(i,"CoeffX/Double"),a=We(i,"CoeffY/Double"),o=We(i,"InverseCoeffX/Double"),l=We(i,"InverseCoeffY/Double"),c=Ue(s,a),u=Ue(o,l);return{spatialReference:n,transform:c&&u&&c.length&&u.length?new je.Z({spatialReference:n,polynomialOrder:r,forwardCoefficients:c,inverseCoefficients:u}):null}}(e);i.transform=n,i.spatialReference||(i.spatialReference=t)}else ze(e,"MDI").forEach((e=>i.metadata[e.getAttribute("key")]=He(e)));else if(Ge(e,"PAMRasterBand")){const t=function(e){var t;const i=qe(e,"NoDataValue"),n=Le(e,"Histograms/HistItem"),r=qe(n,"HistMin"),s=qe(n,"HistMax"),a=qe(n,"BucketCount"),o=null===(t=He(n,"HistCounts"))||void 0===t?void 0:t.split("|").map((e=>Number(e)));let l,c,u,h;ze(e,"Metadata/MDI").forEach((e=>{var t;const i=Number(null!==(t=e.textContent)&&void 0!==t?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=i;break;case"STATISTICS_MAXIMUM":c=i;break;case"STATISTICS_MEAN":u=i;break;case"STATISTICS_STDDEV":h=i}}));const d=qe(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:null!==o&&void 0!==o&&o.length&&null!=r&&null!=s?{min:r,max:s,size:a||o.length,counts:o}:null,sourceBandIndex:d,statistics:null!=l&&null!=c?{min:l,max:c,avg:u,stddev:h}:null}}(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}}));const n=i.rasterBands;if(n.length){const e=!!n[0].statistics;i.statistics=e?n.map((e=>e.statistics)).filter(Ee.pC):null;const t=!!n[0].histogram;i.histograms=t?n.map((e=>e.histogram)).filter(Ee.pC):null}return i}let Xe=class extends ie{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:n,histograms:r,transform:s}=await this._fetchAuxiliaryData(e);const a=!i;a&&(i=new $.Z({wkid:3857})),(null===r||void 0===r?void 0:r.length)&&null==n&&(n=(0,he.Oh)(r));const{width:o,height:l}=t;let c=new Q.Z({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const u=s?s.forwardTransform(c):c;let h=!0;if(s){const e=s.forwardCoefficients;h=e&&0===e[1]&&0===e[2],h&&(s=null,c=u)}const d=new Ze({source:{extent:u,nativeExtent:c,transform:s,pixelBlocks:[t],statistics:n,histograms:r,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a},ioConfig:{sampling:"closest",skipStatistics:!0}});this.ioConfig.skipMapInfo&&(d.ioConfig.skipMapInfo=!0),await d.open(),d.source=null,this._set("rasterInfo",d.rasterInfo),this._inMemoryRaster=d}fetchRawTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this._inMemoryRaster.fetchRawTile(e,t,i,n)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null===e||void 0===e?void 0:e.signal}),i=(0,V.y)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new a.Z("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",i);const n=i.toLowerCase(),r="gif"===n||"bmp"===n||!(0,f.Z)("ios"),s=await this.decodePixelBlock(t,{format:n,useCanvas:r,hasNoZlibMask:!0});if(null==s)throw new a.Z("image-aux-raster:open","the data cannot be decoded");return s}async _fetchAuxiliaryData(e){var t;const i=null===e||void 0===e?void 0:e.signal,{skipExtensions:n=[],skipMapInfo:r}=this.ioConfig,s=r||n.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:i}),a=this.datasetFormat,o="JPG"===a?"jgw":"PNG"===a?"pgw":"BMP"===a?"bpw":null,l=o&&n.includes(o)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+o,{responseType:"text",signal:i}),u=await(0,c.as)([s,l]);if(null!==i&&void 0!==i&&i.aborted)throw(0,c.zE)();const h=Ke(null===(t=u[0].value)||void 0===t?void 0:t.data);if(!h.transform){const e=u[1].value?u[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;h.transform=6===(null===e||void 0===e?void 0:e.length)?new je.Z({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return h}};(0,n._)([(0,h.Cb)({type:String,json:{write:!0}})],Xe.prototype,"datasetFormat",void 0),Xe=(0,n._)([(0,m.j)("esri.layers.support.rasterDatasets.ImageAuxRaster")],Xe);const Qe=Xe;var $e=i(92026),et=i(35995),tt=i(34810),it=i(3089),nt=i(38045);let rt=class extends ie{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async open(e){var t,i,n,r,s;await this.init();const o=null===e||void 0===e?void 0:e.signal,l=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:o});l.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const c=l.data;if(this.sourceJSON=c,!c)throw new a.Z("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!c.tileInfo)throw new a.Z("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();this.tileType=c.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].includes(c.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===c.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=null!==(t=null===(i=c.name)||void 0===i?void 0:i.slice(c.name.indexOf("/")+1))&&void 0!==t?t:"";const u=await this._fetchRasterInfo({signal:o});if(null==u)throw new a.Z("image-server-raster:open","cannot initialize image service");(0,nt.n$)(u,c);const h="Map"===this.tileType?function(e,t){if(!e)return null;const{minScale:i,maxScale:n,minLOD:r,maxLOD:s}=t;if(null!=r&&null!=s)return O.Z.fromJSON({...e,lods:e.lods.filter((e=>{let{level:t}=e;return null!=t&&t>=r&&t<=s}))});if(0!==i&&0!==n){const t=e=>Math.round(1e4*e)/1e4,r=i?t(i):1/0,s=n?t(n):-1/0;return O.Z.fromJSON({...e,lods:e.lods.filter((e=>{const i=t(e.scale);return i<=r&&i>=s}))})}return O.Z.fromJSON(e)}(c.tileInfo,c):O.Z.fromJSON(c.tileInfo);(0,$e.O3)(h);const[d,f]=this._computeMinMaxLOD(u,h),{extent:p,pixelSize:m}=u,y=.5/u.width*m.x,g=Math.max(m.x,m.y),{lods:v}=h;("Map"!==this.tileType&&0!==c.maxScale||Math.abs(m.x-m.y)>y||!v.some((e=>Math.abs(e.resolution-g)<y)))&&(m.x=m.y=d.resolution,u.width=Math.ceil((p.xmax-p.xmin)/m.x-.1),u.height=Math.ceil((p.ymax-p.ymin)/m.y-.1));const x=d.level-f.level,[w,b]=h.size,I=[],_=[];v.forEach(((e,t)=>{e.level>=f.level&&e.level<=d.level&&I.push({x:e.resolution,y:e.resolution}),t<v.length-1&&_.push(Math.round(10*e.resolution/v[t+1].resolution)/10)})),I.sort(((e,t)=>e.x-t.x));const R=this.computeBlockBoundary(p,w,b,h.origin,I,x),S=I.length>1?I.slice(1):null;let T;c.transposeInfo&&(T={tileSize:[c.transposeInfo.rows,c.transposeInfo.cols],packetSize:null!==(n=null===(r=u.keyProperties)||void 0===r?void 0:r._yxs.PacketSize)&&void 0!==n?n:0});const C=_.length<=1||_.length>=3&&_.slice(0,-1).every((e=>e===_[0]))?null!==(s=_[0])&&void 0!==s?s:2:Math.round(10/(f.resolution/d.resolution)**(-1/x))/10;if(u.storageInfo=new Z.Z({blockWidth:h.size[0],blockHeight:h.size[1],pyramidBlockWidth:h.size[0],pyramidBlockHeight:h.size[1],pyramidResolutions:S,pyramidScalingFactor:C,compression:h.format,origin:h.origin,firstPyramidLevel:1,maximumPyramidLevel:x,tileInfo:h,transposeInfo:T,blockBoundary:R}),function(e){const{extent:t,spatialReference:i}=e;t.xmin>-1&&t.xmax>181&&(null===i||void 0===i?void 0:i.wkid)&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new it.Z,e.extent=e.transform.forwardTransform(t))}(u),this._set("rasterInfo",u),c.capabilities.toLowerCase().includes("tilemap")){const e={tileInfo:u.storageInfo.tileInfo,parsedUrl:(0,et.mN)(this.url),url:this.url,tileServers:[]};this._tilemapCache=new tt.y({layer:e})}}async fetchRawTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{storageInfo:r,extent:s}=this.rasterInfo,{transposeInfo:a}=r,o=null!=a&&!!n.transposedVariableName;if(this._slices&&!o&&null==n.sliceId)return null;const l=o?0:r.maximumPyramidLevel-e+this._levelOffset,c="".concat(this.url,"/tile/").concat(l,"/").concat(t,"/").concat(i),u=this._slices?o?{variable:n.transposedVariableName}:{sliceId:n.sliceId||0}:null,{data:h}=await this.request(c,{query:u,responseType:"array-buffer",signal:n.signal});if(!h)return null;const d=o?a.tileSize:r.tileInfo.size,f=await this.decodePixelBlock(h,{width:d[0],height:d[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType,returnInterleaved:o,noDataValue:this.rasterInfo.noDataValue});if(null==f)return null;const p=r.blockBoundary[e];if("jpg"!==r.compression||i>p.minCol&&i<p.maxCol&&t>p.minRow&&t<p.maxRow)return f;const{origin:m,blockWidth:y,blockHeight:g}=r,{x:v,y:x}=this.getPyramidPixelSize(e),w=Math.round((s.xmin-m.x)/v)%y,b=Math.round((s.xmax-m.x)/v)%y||y,I=Math.round((m.y-s.ymax)/x)%g,_=Math.round((m.y-s.ymin)/x)%g||g,R=i===p.minCol?w:0,S=t===p.minRow?I:0,T=i===p.maxCol?b:y,C=t===p.maxRow?_:g;return(0,Y.pW)(f,{x:R,y:S},{width:T-R,height:C-S}),f}getSliceIndex(e){if(!this._slices||null==e||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.find((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName));return!i||(Array.isArray(e.values[0])?"".concat(e.values[0][0],"-").concat(e.values[0][1]):e.values[0])!==(Array.isArray(i.values[0])?"".concat(i.values[0][0],"-").concat(i.values[0][1]):i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){var i;const n=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.statistics})),r=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.histograms})),s=await Promise.all([n,r]);return s[0]&&s[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),null!==(i=s[1])&&void 0!==i&&null!==(i=i[0])&&void 0!==i&&null!==(i=i.counts)&&void 0!==i&&i.length||(s[1]=null),{statistics:s[0]||null,histograms:s[1]||null}}async computeBestPyramidLevelForLocation(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,t.datumTransformation);if(null===i)return null;let n=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let s=r-n+this._levelOffset;const a=i.srcLocation;for(;s>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(s,i.row,i.col,t))break}catch{}if(s--,n++,i=this.identifyPixelLocation(a,n,t.datumTransformation),null===i)return null}return-1===s||null==i?null:n}async _fetchRasterInfo(e){const t=this.sourceJSON;if("Map"===this.tileType){const e=t.fullExtent||t.extent,i=Math.ceil((e.xmax-e.xmin)/t.pixelSizeX-.1),n=Math.ceil((e.ymax-e.ymin)/t.pixelSizeY-.1),r=$.Z.fromJSON(t.spatialReference||e.spatialReference),s=new E.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:r});return new Be.Z({width:i,height:n,bandCount:3,extent:Q.Z.fromJSON(e),spatialReference:r,pixelSize:s,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:i}=e,n=(0,nt.gh)(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),r=t.hasMultidimensions?this.request("".concat(this.url,"/slices"),{query:{f:"json"},signal:i}).then((e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.slices})).catch((()=>null)):null,s=await Promise.all([n,r]);return this._slices=s[1],s[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_computeMinMaxLOD(e,t){var i,n;const{pixelSize:r}=e,s=.5/e.width*r.x,{lods:a}=t,o=t.lodAt(Math.max.apply(null,a.map((e=>e.level)))),l=t.lodAt(Math.min.apply(null,a.map((e=>e.level)))),{tileType:c}=this;if("Map"===c)return this._levelOffset=a[0].level,[o,l];var u;if("Raster"===c)return[null!==(u=a.find((e=>e.resolution===r.x)))&&void 0!==u?u:o,l];const{minScale:h,maxScale:d}=this.sourceJSON;let f=o;d>0&&(f=a.find((e=>Math.abs(e.scale-d)<s)),f||(f=null!==(i=a.filter((e=>e.scale>d)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])&&void 0!==i?i:o));let p=l;return h>0&&(p=null!==(n=a.find((e=>Math.abs(e.scale-h)<s)))&&void 0!==n?n:l,this._levelOffset=p.level-l.level),[f,p]}};(0,n._)([(0,h.Cb)({type:String,json:{write:!0}})],rt.prototype,"datasetFormat",void 0),(0,n._)([(0,h.Cb)()],rt.prototype,"tileType",void 0),rt=(0,n._)([(0,m.j)("esri.layers.support.rasterDatasets.ImageServerRaster")],rt);const st=rt;var at=i(60263);const ot=new Map;ot.set("Int8","s8"),ot.set("UInt8","u8"),ot.set("Int16","s16"),ot.set("UInt16","u16"),ot.set("Int32","s32"),ot.set("UInt32","u32"),ot.set("Float32","f32"),ot.set("Float64","f32"),ot.set("Double64","f32");const lt=new Map;lt.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),lt.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),lt.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),lt.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let ct=class extends ie{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const t=e?e.signal:null,i=await this.request(this.url,{responseType:"xml",signal:t}),{rasterInfo:n,files:r}=this._parseHeader(i.data),{skipMapInfo:s,skipExtensions:a=[]}=this.ioConfig;if(!a.includes("aux.xml")&&!s){var o;const t=await this._fetchAuxiliaryData(e);null!=t&&(n.statistics=null!==(o=t.statistics)&&void 0!==o?o:n.statistics,n.histograms=t.histograms,t.histograms&&null==n.statistics&&(n.statistics=(0,he.Oh)(t.histograms)))}s&&this.updateImageSpaceRasterInfo(n),this._set("rasterInfo",n),this._files=r;const l=await this.request(r.index,{responseType:"array-buffer",signal:t});this._storageIndex=function(e){if(e.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let t,i,n,r,s,a;if(at.f){for(i=new Uint8Array(e),r=new ArrayBuffer(e.byteLength),n=new Uint8Array(r),s=0;s<e.byteLength/4;s++)for(a=0;a<4;a++)n[4*s+a]=i[4*s+3-a];t=new Uint32Array(r)}else t=new Uint32Array(e);return t}(l.data);const{blockWidth:c,blockHeight:u}=this.rasterInfo.storageInfo,h=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:d,height:f}=this.rasterInfo,p=[],m=this._getBandSegmentCount();let y=0,g=-1;for(;y<this._storageIndex.length;){g++;const e=Math.ceil(d/c/h**g)-1,t=Math.ceil(f/u/h**g)-1;y+=(e+1)*(t+1)*m*4,p.push({maxRow:t,maxCol:e,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=p,g>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=g),this.updateTileInfo()}async fetchRawTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{blockWidth:r,blockHeight:s,blockBoundary:a}=this.rasterInfo.storageInfo,o=a[e];if(!o||o.maxRow<t||o.maxCol<i||o.minRow>t||o.minCol>i)return null;const{bandCount:l,pixelType:c}=this.rasterInfo,{ranges:u,actualTileWidth:h,actualTileHeight:d}=this._getTileLocation(e,t,i);if(!u||0===u.length)return null;if(0===u[0].from&&0===u[0].to){const e=new Uint8Array(r*s);return new re.Z({width:r,height:s,pixels:void 0,mask:e,validPixelCount:0})}const{bandIds:f}=this.ioConfig,p=this._getBandSegmentCount(),m=[];let y=0;for(y=0;y<p;y++)f&&!f.includes(y)||m.push(this.request(this._files.data,{range:{from:u[y].from,to:u[y].to},responseType:"array-buffer",signal:n.signal}));const g=await Promise.all(m),v=g.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),x=new Uint8Array(v),w=[];let b=0;for(y=0;y<p;y++)w.push(b),x.set(new Uint8Array(g[y].data),b),b+=g[y].data.byteLength;const I=lt.get(this.rasterInfo.storageInfo.compression).decoderFormat,_=await this.decodePixelBlock(x.buffer,{width:r,height:s,format:I,planes:(null===f||void 0===f?void 0:f.length)||l,offsets:w,pixelType:c});if(null==_)return null;let{noDataValue:R}=this.rasterInfo;if(null!=R&&"lerc"!==I&&!_.mask&&(R=R[0],null!=R)){const e=_.width*_.height,t=new Uint8Array(e);if(Math.abs(R)>1e24)for(y=0;y<e;y++)Math.abs((_.pixels[0][y]-R)/R)>1e-6&&(t[y]=1);else for(y=0;y<e;y++)_.pixels[0][y]!==R&&(t[y]=1);_.mask=t}let S=0,T=0;if(h!==r||d!==s){let e=_.mask;if(e)for(y=0;y<s;y++)if(T=y*r,y<d)for(S=h;S<r;S++)e[T+S]=0;else for(S=0;S<r;S++)e[T+S]=0;else for(e=new Uint8Array(r*s),_.mask=e,y=0;y<d;y++)for(T=y*r,S=0;S<h;S++)e[T+S]=1}return _}_getBandSegmentCount(){return lt.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,i){const{blockWidth:n,blockHeight:r,pyramidScalingFactor:s}=this.rasterInfo.storageInfo,{width:a,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,u,h,d=0,f=0;for(h=0;h<e;h++)f=s**h,c=Math.ceil(a/n/f),u=Math.ceil(o/r/f),d+=c*u;f=s**e,c=Math.ceil(a/n/f),u=Math.ceil(o/r/f),d+=t*c+i,d*=4*l;const p=this._storageIndex.subarray(d,d+4*l);let m=0,y=0;const g=[];for(let v=0;v<l;v++)m=p[4*v]*2**32+p[4*v+1],y=m+p[4*v+2]*2**32+p[4*v+3],g.push({from:m,to:y});return{ranges:g,actualTileWidth:i<c-1?n:Math.ceil(a/f)-n*(c-1),actualTileHeight:t<u-1?r:Math.ceil(o/f)-r*(u-1)}}_parseHeader(e){const t=Le(e,"MRF_META/Raster");if(!t)throw new a.Z("mrf:open","not a valid MRF format");const i=Le(t,"Size"),n=parseInt(i.getAttribute("x"),10),r=parseInt(i.getAttribute("y"),10),s=parseInt(i.getAttribute("c"),10),o=(He(t,"Compression")||"none").toLowerCase();if(!lt.has(o))throw new a.Z("mrf:open","currently does not support compression "+o);const l=He(t,"DataType")||"UInt8",c=ot.get(l);if(null==c)throw new a.Z("mrf:open","currently does not support pixel type "+l);const u=Le(t,"PageSize"),h=parseInt(u.getAttribute("x"),10),d=parseInt(u.getAttribute("y"),10),f=Le(t,"DataValues");let p,m;if(f&&(m=f.getAttribute("NoData"),null!=m&&(p=m.trim().split(" ").map((e=>parseFloat(e))))),Le(e,"MRF_META/CachedSource"))throw new a.Z("mrf:open","currently does not support MRF referencing other data files");const y=Le(e,"MRF_META/GeoTags"),g=Le(y,"BoundingBox");let v,x=!1;if(null!=g){var w;const e=parseFloat(g.getAttribute("minx")),t=parseFloat(g.getAttribute("miny")),i=parseFloat(g.getAttribute("maxx")),n=parseFloat(g.getAttribute("maxy")),r=He(y,"Projection")||"";let s=$.Z.WGS84;if("LOCAL_CS[]"!==r)if(r.toLowerCase().startsWith("epsg:")){const e=Number(r.slice(5));isNaN(e)||0===e||(s=new $.Z({wkid:e}))}else s=null!==(w=Ve(r))&&void 0!==w?w:$.Z.WGS84;else x=!0,s=new $.Z({wkid:3857});v=new Q.Z(e,t,i,n),v.spatialReference=s}else x=!0,v=new Q.Z({xmin:-.5,ymin:.5-r,xmax:n-.5,ymax:.5,spatialReference:new $.Z({wkid:3857})});const b=Le(e,"MRF_META/Rsets"),I=parseInt((null===b||void 0===b?void 0:b.getAttribute("scale"))||"2",10),_=v.spatialReference,R=new Z.Z({origin:new E.Z({x:v.xmin,y:v.ymax,spatialReference:_}),blockWidth:h,blockHeight:d,pyramidBlockWidth:h,pyramidBlockHeight:d,compression:o,pyramidScalingFactor:I}),S=new E.Z({x:v.width/n,y:v.height/r,spatialReference:_}),T=new Be.Z({width:n,height:r,extent:v,isPseudoSpatialReference:x,spatialReference:_,bandCount:s,pixelType:c,pixelSize:S,noDataValue:p,storageInfo:R}),C=He(e,"datafile"),k=He(e,"IndexFile");return{rasterInfo:T,files:{mrf:this.url,index:k||this.url.replace(".mrf",".idx"),data:C||this.url.replace(".mrf",lt.get(o).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null===e||void 0===e?void 0:e.signal});return Ke(t)}catch{return null}}};(0,n._)([(0,h.Cb)()],ct.prototype,"_files",void 0),(0,n._)([(0,h.Cb)()],ct.prototype,"_storageIndex",void 0),(0,n._)([(0,h.Cb)({type:String,json:{write:!0}})],ct.prototype,"datasetFormat",void 0),ct=(0,n._)([(0,m.j)("esri.layers.support.rasterDatasets.MRFRaster")],ct);const ut=ct;var ht=i(17061);function dt(e){const t=e.fields,i=e.records,n=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",r=[{name:n,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),s=r.map((e=>e.name)),a=[];let o=0,l=0;return i.forEach((e=>{const t={};for(t[n]=o++,l=1;l<s.length;l++)t[s[l]]=e[l-1];a.push({attributes:t})})),{displayFieldName:"",fields:r,features:a}}class ft{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const n=t.getUint32(4,!0),r=t.getUint16(8,!0),s=t.getUint16(10,!0),a={version:i,recordCount:n,headerByteCount:r,recordByteCount:s};let o=32;const l=[],c=[];let u;if(3===i){for(;13!==t.getUint8(o);)u=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:(0,ht.f)(new Uint8Array(e,o,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<n&&e.byteLength-o>s;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach((t=>{if("C"===t.type)i.push((0,ht.f)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const n=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(n.substring(0,4),10),parseInt(n.substring(4,6),10)-1,parseInt(n.substring(6,8),10)))}o+=t.length})),c.push(i)):o+=s}}return{header:a,fields:l,records:c,recordSet:dt({fields:l,records:c})}}}var pt=i(58424),mt=i(92217);const yt=(e,t)=>{var i;return null===(i=e.get(t))||void 0===i?void 0:i.values},gt=(e,t)=>{var i;return null===(i=e.get(t))||void 0===i||null===(i=i.values)||void 0===i?void 0:i[0]};let vt=class extends ie{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var t,i;await this.init();const n=e?e.signal:null,{data:r}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:n});if(!r)throw new a.Z("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:s,firstIFDPos:l,isBigTiff:c}=(0,pt.cK)(r),u=[];await this._readIFDs(u,r,s,l,0,c?8:4,n);const{imageInfo:h,rasterInfo:d}=function(e){var t,i;const n=(0,pt.FI)(e),{width:r,height:s,tileWidth:a,tileHeight:o,planes:l,pixelType:c,compression:u,firstPyramidLevel:h,maximumPyramidLevel:d,pyramidBlockWidth:f,pyramidBlockHeight:p,pyramidResolutions:m,tileBoundary:y,affine:g,metadata:v}=n,x=(null===(t=n.extent.spatialReference)||void 0===t?void 0:t.wkt)||(null===(i=n.extent.spatialReference)||void 0===i?void 0:i.wkid);let w=Ve(x),b=!!n.isPseudoGeographic;null==w&&(b=!0,w=new $.Z({wkid:3857}));const I=new Q.Z({...n.extent,spatialReference:w}),_=new E.Z(I?{x:I.xmin,y:I.ymax,spatialReference:w}:{x:0,y:0}),R=new Z.Z({blockWidth:a,blockHeight:o,pyramidBlockWidth:f,pyramidBlockHeight:p,compression:u,origin:_,firstPyramidLevel:h,maximumPyramidLevel:d,pyramidResolutions:m,blockBoundary:y}),S=new E.Z({x:(I.xmax-I.xmin)/r,y:(I.ymax-I.ymin)/s,spatialReference:w}),T=v?{BandProperties:v.bandProperties,DataType:v.dataType}:{};let C=null;const k=gt(e[0],"PHOTOMETRICINTERPRETATION"),F=yt(e[0],"COLORMAP");if(k<=3&&(null===F||void 0===F?void 0:F.length)>3&&F.length%3==0){C=[];const e=F.length/3;for(let t=0;t<e;t++)C.push([t,F[t]>>>8,F[t+e]>>>8,F[t+2*e]>>>8])}const M=new Be.Z({width:r,height:s,bandCount:l,pixelType:c,pixelSize:S,storageInfo:R,spatialReference:w,isPseudoSpatialReference:b,keyProperties:T,extent:I,colormap:C,statistics:v?v.statistics:null});if(null!==g&&void 0!==g&&g.length&&(M.nativeExtent=new Q.Z({xmin:-.5,ymin:.5-s,xmax:r-.5,ymax:.5,spatialReference:w}),M.transform=new je.Z({polynomialOrder:1,forwardCoefficients:[g[2]+g[0]/2,g[5]-g[3]/2,g[0],g[3],-g[1],-g[4]]}),M.extent=M.transform.forwardTransform(M.nativeExtent),M.pixelSize=new E.Z({x:(I.xmax-I.xmin)/r,y:(I.ymax-I.ymin)/s,spatialReference:w}),R.origin.x=-.5,R.origin.y=.5),m){const{x:e,y:t}=M.pixelSize;m.forEach((i=>{i.x*=e,i.y*=t}))}return{imageInfo:n,rasterInfo:M}}(u),f=(0,pt.ee)(u),p=(0,pt.I7)(u);if(this._headerInfo={littleEndian:s,isBigTiff:c,ifds:u,pyramidIFDs:f,maskIFDs:p,...h},this._set("rasterInfo",d),!h.isSupported)throw new a.Z("tiffraster:open","this tiff is not supported: "+h.message);if(!h.tileWidth)throw new a.Z("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");d.isPseudoSpatialReference&&o.Z.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");const m=null===(t=u[0].get("PREDICTOR"))||void 0===t||null===(t=t.values)||void 0===t?void 0:t[0];if(3===(null===(i=u[0].get("SAMPLEFORMAT"))||void 0===i||null===(i=i.values)||void 0===i?void 0:i[0])&&2===m)throw new a.Z("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");const{skipMapInfo:y,skipExtensions:g=[]}=this.ioConfig;if(!g.includes("aux.xml")&&!y){const t=await this._fetchAuxiliaryMetaData(e);null!=t&&function(e,t){var i;if(t.statistics=null!==(i=e.statistics)&&void 0!==i?i:t.statistics,t.histograms=e.histograms,e.histograms&&null==t.statistics&&(t.statistics=(0,he.Oh)(e.histograms)),e.transform&&null==t.transform){t.transform=e.transform,t.nativeExtent=t.extent;const i=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new E.Z({x:(i.xmax-i.xmin)/t.width,y:(i.ymax-i.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=i}t.isPseudoSpatialReference&&e.spatialReference&&(t.spatialReference=e.spatialReference,t.extent.spatialReference=t.nativeExtent.spatialReference=t.storageInfo.origin.spatialReference=t.spatialReference)}(t,d)}g.includes("vat.dbf")||1!==d.bandCount||"u8"!==d.pixelType||y||(d.attributeTable=await this._fetchAuxiliaryTable(e),null!=d.attributeTable&&(d.keyProperties.DataType="thematic")),y&&this.updateImageSpaceRasterInfo(d),this.updateTileInfo()}async fetchRawTile(e,t,i){var n;let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(null===(n=this._headerInfo)||void 0===n||!n.isSupported||this.isBlockOutside(e,t,i))return null;const s=await this._fetchRawTiffTile(e,t,i,!1,r);if(null!=s&&this._headerInfo.hasMaskBand){const n=await this._fetchRawTiffTile(e,t,i,!0,r);null!=n&&n.pixels[0]instanceof Uint8Array&&(s.mask=n.pixels[0])}return s}async _readIFDs(e,t,i,n,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:4,a=arguments.length>6?arguments[6]:void 0;if(!n)return null;(n>=t.byteLength||n<0)&&(t=(await this.request(this.url,{range:{from:n+r,to:n+r+this._bufferSize},responseType:"array-buffer",signal:a})).data,r=n+r,n=0);const o=await this._readIFD(t,i,n,r,mt.Z.tiffTags,s,a);if(e.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(e,t,i,o.nextIFD-r,r,s,a)}async _readIFD(e,t,i,n){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:mt.Z.tiffTags,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:4,a=arguments.length>6?arguments[6]:void 0;if(!e)return null;const o=(0,pt.vr)(e,t,i,n,r,s);if(o.success){var l,c;const i=[];if(null!==(l=o.ifd)&&void 0!==l&&l.forEach((e=>{e.values||i.push(e)})),i.length>0){const r=i.map((e=>e.offlineOffsetSize)).filter(Ee.pC),s=Math.min.apply(null,r.map((e=>e[0])));if(Math.min.apply(null,r.map((e=>e[0]+e[1])))-s<=this._bufferSize){const{data:r}=await this.request(this.url,{range:{from:s,to:s+this._bufferSize},responseType:"array-buffer",signal:a});e=r,n=s,i.forEach((i=>(0,pt.Dq)(e,t,i,n)))}}if(null!==(c=o.ifd)&&void 0!==c&&c.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),r=null===i||void 0===i?void 0:i.values;if(r&&r.length>4){const s=r[0]+"."+r[1]+"."+r[2],o=await this._readIFD(e,t,i.valueOffset+6-n,n,mt.Z.geoKeys,2,a);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[s]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:n,to:n+o.requiredBufferSize+4},responseType:"array-buffer",signal:a});return(e=i.data).byteLength<o.requiredBufferSize?null:this._readIFD(e,t,0,n,mt.Z.tiffTags,4,a)}}async _fetchRawTiffTile(e,t,i,n){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};const s=this._getTileLocation(e,t,i,n);if(!s)return null;const{ranges:a,actualTileWidth:o,actualTileHeight:l,ifd:c}=s,u=a.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:r.signal}))),h=await Promise.all(u),d=h.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),f=1===h.length?h[0].data:new ArrayBuffer(d),p=[0],m=[0];if(h.length>1){const e=new Uint8Array(f);for(let t=0,i=0;t<h.length;t++){const n=h[t].data;e.set(new Uint8Array(n),i),p[t]=i,i+=n.byteLength,m[t]=n.byteLength}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),v=await this.decodePixelBlock(f,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:p,sizes:m},width:y,height:g,planes:null,pixelType:null});if(null==v)return null;let x,w,b;if(o!==y||l!==g){let e=v.mask;if(e)for(x=0;x<g;x++)if(b=x*y,x<l)for(w=o;w<y;w++)e[b+w]=0;else for(w=0;w<y;w++)e[b+w]=0;else for(e=new Uint8Array(y*g),v.mask=e,x=0;x<l;x++)for(b=x*y,w=0;w<o;w++)e[b+w]=1}return v}_getTileLocation(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const{firstPyramidLevel:r,blockBoundary:s}=this.rasterInfo.storageInfo,a=0===e?0:e-(r-1),{_headerInfo:o}=this;if(!o)return null;const l=n?o.maskIFDs[a]:0===a?null===o||void 0===o?void 0:o.ifds[0]:null===o||void 0===o?void 0:o.pyramidIFDs[a-1];if(!l)return null;const c=(0,pt.If)(l,o),u=yt(l,"TILEOFFSETS");if(void 0===u)return null;const h=yt(l,"TILEBYTECOUNTS"),{minRow:d,minCol:f,maxRow:p,maxCol:m}=s[a];if(t>p||i>m||t<d||i<f)return null;const y=gt(l,"IMAGEWIDTH"),g=gt(l,"IMAGELENGTH"),v=gt(l,"TILEWIDTH"),x=gt(l,"TILELENGTH"),w=[];if(c){const{bandCount:e}=this.rasterInfo;for(let n=0;n<e;n++){const e=n*(p+1)*(m+1)+t*(m+1)+i;w[n]={from:u[e],to:u[e]+h[e]-1}}}else{const e=t*(m+1)+i;w.push({from:u[e],to:u[e]+h[e]-1})}for(let b=0;b<w.length;b++)if(null==w[b].from||!w[b].to||w[b].to<0)return null;return{ranges:w,ifd:l,actualTileWidth:i===m&&y%v||v,actualTileHeight:t===p&&g%x||x}}async _fetchAuxiliaryMetaData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null===e||void 0===e?void 0:e.signal});return Ke(t)}catch{return null}}async _fetchAuxiliaryTable(e){try{const{data:t}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:null===e||void 0===e?void 0:e.signal}),i=ft.parse(t);return null!==i&&void 0!==i&&i.recordSet?oe.Z.fromJSON(i.recordSet):null}catch{return null}}};(0,n._)([(0,h.Cb)()],vt.prototype,"_files",void 0),(0,n._)([(0,h.Cb)()],vt.prototype,"_headerInfo",void 0),(0,n._)([(0,h.Cb)()],vt.prototype,"_bufferSize",void 0),(0,n._)([(0,h.Cb)({type:String,json:{write:!0}})],vt.prototype,"datasetFormat",void 0),vt=(0,n._)([(0,m.j)("esri.layers.support.rasterDatasets.TIFFRaster")],vt);const xt=vt,wt=new Map;wt.set("MRF",{desc:"Meta Raster Format",constructor:ut}),wt.set("TIFF",{desc:"GeoTIFF",constructor:xt}),wt.set("RasterTileServer",{desc:"Raster Tile Server",constructor:st}),wt.set("JPG",{desc:"JPG Raster Format",constructor:Qe}),wt.set("PNG",{desc:"PNG Raster Format",constructor:Qe}),wt.set("GIF",{desc:"GIF Raster Format",constructor:Qe}),wt.set("BMP",{desc:"BMP Raster Format",constructor:Qe}),wt.set("CovJSON",{desc:"COVJSON Raster Format",constructor:Ae}),wt.set("MEMORY",{desc:"In Memory Raster Format",constructor:Ze});class bt{static get supportedFormats(){const e=new Set;return wt.forEach(((t,i)=>e.add(i))),e}static async open(e){var t,i;const{url:n,ioConfig:r,source:s,sourceJSON:o}=e;let l=null!==(t=e.datasetFormat)&&void 0!==t?t:null===r||void 0===r?void 0:r.datasetFormat;null==l&&(n.includes(".")?l=n.slice(n.lastIndexOf(".")+1).toUpperCase():"coverage"===(null===s||void 0===s||null===(i=s.type)||void 0===i?void 0:i.toLowerCase())?l="CovJSON":(null===s||void 0===s?void 0:s.extent)&&s.pixelblocks&&(l="MEMORY")),"OVR"===l||"TIF"===l?l="TIFF":"JPG"===l||"JPEG"===l||"JFIF"===l?l="JPG":"COVJSON"===l&&(l="CovJSON"),n.toLowerCase().includes("/imageserver")&&!n.toLowerCase().includes("/wcsserver")&&(l="RasterTileServer");const c={url:n,source:s,sourceJSON:o,datasetFormat:l,ioConfig:null!==r&&void 0!==r?r:{bandIds:null,sampling:null}};if(Object.keys(c).forEach((e=>{null==c[e]&&delete c[e]})),l){if(!this.supportedFormats.has(l))throw new a.Z("rasterfactory:open","not a supported format "+l);if("CRF"===l)throw new a.Z("rasterfactory:open","cannot open raster: ".concat(n));const t=new(0,wt.get(l).constructor)(c);return await t.open({signal:e.signal}),t}const u=Array.from(wt.keys()).filter((e=>"CovJSON"!==e&&"Memory"!==e));let h=0;const d=()=>{if(l=u[h++],!l)return null;if("CRF"===l)return null;const t=new(0,wt.get(l).constructor)(c);return t.open({signal:e.signal}).then((()=>t)).catch((()=>d()))};return d()}static register(e,t,i){wt.has(e.toUpperCase())||wt.set(e.toUpperCase(),{desc:t,constructor:i})}}var It=i(81085),_t=i(84933);let Rt=class extends((0,v.h7)((0,we.M)((0,ge.q)((0,ve.I)((0,x.N)(ye((0,be.n)((0,g.Y)((0,xe.Q)((0,l.R)((0,s.J)(y.Z)))))))))))){constructor(){super(...arguments),this._primaryRasters=[],this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this.source=void 0,this._debouncedSaveOperations=(0,c.Ds)((async(e,t,n)=>{const{save:r,saveAs:s}=await i.e(3275).then(i.bind(i,63275));switch(e){case _t.x.SAVE:return r(this,t);case _t.x.SAVE_AS:return s(this,n,t)}}))}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(c.r9).then((()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var e,t;const i=[new Ie.Z({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"}),new Ie.Z({name:"Raster.ServicePixelValue.Raw",alias:"Raw Pixel Value",domain:null,editable:!1,length:50,type:"string"})],n=null!==(e=null===(t=this.raster)||void 0===t?void 0:t.rasterInfo)&&void 0!==e?e:this.serviceRasterInfo,r=null===n||void 0===n?void 0:n.attributeTable,s=null!=r?r.fields:null;if(s){const e=s.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=e.clone();return t.name="Raster."+e.name,t}));i.push(...e)}const a=null===n||void 0===n?void 0:n.dataType,o=null===n||void 0===n?void 0:n.multidimensionalInfo;if(("vector-magdir"===a||"vector-uv"===a)&&null!=o){var l;const e=null===(l=o.variables[0].unit)||void 0===l?void 0:l.trim(),t="Magnitude"+(e?" (".concat(e,")"):"");i.push(new Ie.Z({name:"Raster.Magnitude",alias:t,domain:null,editable:!1,type:"double"})),i.push(new Ie.Z({name:"Raster.Direction",alias:"Direction (\xb0)",domain:null,editable:!1,type:"double"}))}return i}createPopupTemplate(e){const{rasterFields:t}=this,i=new Set(t.map((e=>{let{name:t}=e;return t})).filter((e=>"raster.servicepixelvalue.raw"!==e.toLowerCase())));return(0,It.eZ)({fields:t,title:this.title},{...e,visibleFieldNames:i})}async generateRasterInfo(e,t){var i;if(e=(0,d.TJ)(F.Z,e),await this.load(),!e||"none"===(null===(i=e.functionName)||void 0===i?void 0:i.toLowerCase()))return this.serviceRasterInfo;try{const{rasterInfo:i}=await this._openFunctionRaster(e,t);return i}catch(z){if(z instanceof a.Z)throw z;throw new a.Z("imagery-tile-layer","the given raster function is not supported")}}async save(e){return this._debouncedSaveOperations(_t.x.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(_t.x.SAVE_AS,t,e)}write(e,t){var i;const n=null!==(i=this._primaryRasters[0])&&void 0!==i?i:this.raster;if(this.loaded?"RasterTileServer"===n.datasetFormat&&("Raster"===n.tileType||"Map"===n.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(null!==t&&void 0!==t&&t.messages){const e="".concat(t.origin,"/").concat(t.layerContainerType||"operational-layers");t.messages.push(new a.Z("layer:unsupported","Layers (".concat(this.title,", ").concat(this.id,") of type '").concat(this.declaredClass,"' are not supported in the context of '").concat(e,"'"),{layer:this}))}return null}async _openRaster(e){var t;let i=!1;if(this.raster)await this._openFromRaster(this.raster,e),i="Function"===this.raster.datasetFormat;else{const{url:t,rasterFunction:i,source:n}=this;if(!t&&!n)throw new a.Z("imagery-tile-layer:open","missing url or source parameter");n?await this._openFromSource(n,e):i?await this._openFromUrlWithRasterFunction(t,i,e):await this._openFromUrl(t,e)}const n=this.raster.rasterInfo;if(!n)throw new a.Z("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("serviceRasterInfo",i?n:this._primaryRasters[0].rasterInfo),this._set("spatialReference",n.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(e,{origin:"service"})}else this.read({tileInfo:null===(t=this.serviceRasterInfo)||void 0===t?void 0:t.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles((0,u.YP)((()=>this.customParameters),(e=>{this.raster&&(this.raster.ioConfig.customFetchParameters=e)})))}async _openFromRaster(e,t){e.rasterInfo||await e.open({signal:t}),this._primaryRasters="Function"===e.datasetFormat?e.primaryRasters.rasters:[e],this.url||(this.url=this._primaryRasters[0].url)}async _openFromUrlWithRasterFunction(e,t,i){const n=[e];t&&(0,ue.G8)(t.toJSON(),n);const r=await Promise.all(n.map((e=>bt.open({url:e,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:i})))),s=r.findIndex((e=>null==e));if(s>-1)throw new a.Z("imagery-tile-layer:open","cannot open raster: ".concat(n[s]));return this._primaryRasters=r,this._initializeWithFunctionRaster(t)}async _openFromUrl(e,t){const i=await bt.open({url:e,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:t});if(null==i)throw new a.Z("imagery-tile-layer:open","cannot open raster: ".concat(e));this._primaryRasters=[i],this.raster=i}async _openFromSource(e,t){var i;const n="the tiled imagery data source is not supported",r="coverage"===(null===(i=e.type)||void 0===i?void 0:i.toLowerCase())?"CovJSON":e.extent&&e.pixelBlock?"MEMORY":null;if(!r)throw new a.Z("imagery-tile-layer:open",n);"MEMORY"===r&&(e={extent:e.extent,pixelBlocks:[e.pixelBlock]});const s=await bt.open({url:"",source:e,datasetFormat:r,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:t});if(null==s)throw new a.Z("imagery-tile-layer:open",n);this._primaryRasters=[s],this.rasterFunction?await this._initializeWithFunctionRaster(this.rasterFunction):this.raster=s}async _openFunctionRaster(e,t){var i,n;const r={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach((e=>r[e.url]=e));const s=(0,ue.Ue)(null!==(i=null===(n=e.functionDefinition)||void 0===n?void 0:n.toJSON())&&void 0!==i?i:e.toJSON(),r),a=new ce({rasterFunction:s});return await a.open(t),a}async _initializeWithFunctionRaster(e,t){try{this.raster=await this._openFunctionRaster(e,t)}catch(z){z instanceof a.Z&&o.Z.getLogger(this).error("imagery-tile-layer:open",z.message),o.Z.getLogger(this).warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=this._primaryRasters[0]}}};(0,n._)([(0,h.Cb)({clonable:!1})],Rt.prototype,"_primaryRasters",void 0),(0,n._)([(0,h.Cb)({type:[d.z8],json:{write:{overridePolicy(){var e;return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==(null===(e=this.bandIds)||void 0===e?void 0:e.join(","))}}}}})],Rt.prototype,"bandIds",void 0),(0,n._)([(0,h.Cb)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),(0,p.J)(_e.cl)],Rt.prototype,"interpolation",void 0),(0,n._)([(0,h.Cb)(T.rn)],Rt.prototype,"legendEnabled",void 0),(0,n._)([(0,h.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Rt.prototype,"isReference",void 0),(0,n._)([(0,h.Cb)({type:["show","hide"]})],Rt.prototype,"listMode",void 0),(0,n._)([(0,h.Cb)({json:{read:!0,write:!0}})],Rt.prototype,"blendMode",void 0),(0,n._)([(0,h.Cb)()],Rt.prototype,"sourceJSON",void 0),(0,n._)([(0,h.Cb)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],Rt.prototype,"version",void 0),(0,n._)([(0,h.Cb)({readOnly:!0,json:{read:!1}})],Rt.prototype,"type",void 0),(0,n._)([(0,h.Cb)({type:["ArcGISTiledImageServiceLayer"]})],Rt.prototype,"operationalLayerType",void 0),(0,n._)([(0,h.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,i){t[i]=!e}}}})],Rt.prototype,"popupEnabled",void 0),(0,n._)([(0,h.Cb)({type:r.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],Rt.prototype,"popupTemplate",void 0),(0,n._)([(0,h.Cb)({readOnly:!0})],Rt.prototype,"defaultPopupTemplate",null),(0,n._)([(0,h.Cb)({readOnly:!0,type:[Ie.Z]})],Rt.prototype,"fields",void 0),(0,n._)([(0,h.Cb)({readOnly:!0,type:[Ie.Z]})],Rt.prototype,"rasterFields",null),(0,n._)([(0,h.Cb)({constructOnly:!0})],Rt.prototype,"source",void 0),Rt=(0,n._)([(0,m.j)("esri.layers.ImageryTileLayer")],Rt);const St=Rt},34810:(e,t,i)=>{i.d(t,{y:()=>_});var n,r=i(27366),s=i(76200),a=i(7138),o=i(70116),l=i(10064),c=i(42537),u=(i(93169),i(16054)),h=i(27546),d=i(66978),f=i(94172),p=i(99346),m=i(35995),y=i(49861),g=(i(32718),i(84936),i(69912)),v=i(87960),x=i(84652),w=i(18722);class b{constructor(e){!function(e){if(null===e||void 0===e||!e.location)throw new l.Z("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new l.Z("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new l.Z("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new l.Z("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new l.Z("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}(e);const{location:t,data:i}=e;this.location=Object.freeze((0,x.d9)(t));const n=this.location.width,r=this.location.height;let s=!0,a=!0;const o=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return e<=w.c8?t?new Array(e).fill(0):new Array(e):new Uint32Array(e)}(Math.ceil(n*r/32));let c=0;for(let l=0;l<i.length;l++){const e=l%32;i[l]?(a=!1,o[c]|=1<<e):s=!1,31===e&&++c}a?(this._availability="unavailable",this.byteSize=40):s?(this._availability="available",this.byteSize=40):(this._availability=o,this.byteSize=40+(0,w.Xw)(o))}getAvailability(e,t){if("unavailable"===this._availability||"available"===this._availability)return this._availability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),n=i%32,r=i>>5,s=this._availability;return r<0||r>s.length?"unknown":s[r]&1<<n?"available":"unavailable"}static fromDefinition(e,t){const i=e.service.request||s.Z,{row:n,col:r,width:a,height:o}=e,c={query:{f:"json"}};return t=t?{...c,...t}:c,i(function(e){var t;let i;if(null!==(t=e.service.tileServers)&&void 0!==t&&t.length){const t=e.service.tileServers;i="".concat(t&&t.length?t[e.row%t.length]:e.service.url,"/tilemap/").concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height)}else i="".concat(e.service.url,"/tilemap/").concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height);const n=e.service.query;return n&&(i="".concat(i,"?").concat(n)),i}(e),t).then((e=>e.data)).catch((e=>{var t;if(422===(null===e||void 0===e||null===(t=e.details)||void 0===t?void 0:t.httpStatus))return{location:{top:n,left:r,width:a,height:o},valid:!0,data:new Array(a*o).fill(0)};throw e})).then((e=>{if(e.location&&(e.location.top!==n||e.location.left!==r||e.location.width!==a||e.location.height!==o))throw new l.Z("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:n,left:r,width:a,height:o}});return b.fromJSON(e)}))}static fromJSON(e){return Object.freeze(new b(e))}}function I(e){return"".concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height)}let _=n=class extends a.Z{constructor(e){super(e),this._pendingTilemapRequests={},this.request=s.Z,this.size=32,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new u.z(2*o.Y.MEGABYTES),this.addHandles((0,f.YP)((()=>{const{layer:e}=this;return[null===e||void 0===e?void 0:e.parsedUrl,null===e||void 0===e?void 0:e.tileServers,null===e||void 0===e?void 0:e.apiKey,null===e||void 0===e?void 0:e.customParameters]}),(()=>this._initializeTilemapDefinition()),f.nn))}get effectiveMinLOD(){var e;return null!==(e=this.minLOD)&&void 0!==e?e:this.layer.tileInfo.lods[0].level}get effectiveMaxLOD(){var e;return null!==(e=this.maxLOD)&&void 0!==e?e:this.layer.tileInfo.lods[this.layer.tileInfo.lods.length-1].level}getAvailability(e,t,i){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return"unavailable";const n=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return n?n.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,n){return!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD?Promise.reject(new l.Z("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})):this._fetchTilemap(e,t,i,n).catch((e=>e)).then((n=>{if(n instanceof b){const r=n.getAvailability(t,i);if("unavailable"===r)throw new l.Z("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i});return r}if((0,d.D_)(n))throw n;return"unknown"}))}fetchAvailabilityUpsample(e,t,i,n,r){n.level=e,n.row=t,n.col=i;const s=this.layer.tileInfo;s.updateTileInfo(n);const a=this.fetchAvailability(e,t,i,r).catch((e=>{if((0,d.D_)(e))throw e;if(s.upsampleTile(n))return this.fetchAvailabilityUpsample(n.level,n.row,n.col,n,r);throw e}));return this._fetchAvailabilityUpsamplePrefetch(n.id,e,t,i,r,a),a}async _fetchAvailabilityUpsamplePrefetch(e,t,i,r,s,a){if(!this._prefetchingEnabled||null==e)return;const o="prefetch-".concat(e);if(this.hasHandles(o))return;const l=new AbortController;a.then((()=>l.abort()),(()=>l.abort()));let u=!1;const h=(0,c.kB)((()=>{u||(u=!0,l.abort())}));if(this.addHandles(h,o),await(0,p.MU)(10,l.signal).catch((()=>{})),u||(u=!0,this.removeHandles(o)),(0,d.Hc)(l))return;const f=new v.f(e,t,i,r),m={...s,signal:l.signal},y=this.layer.tileInfo;for(let c=0;n._prefetches.length<n._maxPrefetch&&y.upsampleTile(f);++c){const e=this.fetchAvailability(f.level,f.row,f.col,m);n._prefetches.push(e);const t=()=>{n._prefetches.removeUnordered(e)};e.then(t,t)}}_fetchTilemap(e,t,i,n){var r;if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return Promise.reject(new l.Z("tilemap-cache:level-unavailable","Level ".concat(e," is unavailable in the service")));const s=this._tmpTilemapDefinition,a=this._tilemapFromCache(e,t,i,s);if(a)return Promise.resolve(a);const o=null===(r=n)||void 0===r?void 0:r.signal;return n={...n,signal:null},new Promise(((e,t)=>{(0,d.fu)(o,(()=>t((0,d.zE)())));const i=I(s);let r=this._pendingTilemapRequests[i];if(!r){r=b.fromDefinition(s,n).then((e=>(this._tilemapCache.put(i,e,e.byteSize),e)));const e=()=>{delete this._pendingTilemapRequests[i]};this._pendingTilemapRequests[i]=r,r.then(e,e)}r.then(e,t)}))}_initializeTilemapDefinition(){var e;if(!this.layer.parsedUrl)return;const{parsedUrl:t,apiKey:i,customParameters:n}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:t.path,query:(0,m.B7)({...t.query,...n,token:null!==i&&void 0!==i?i:null===(e=t.query)||void 0===e?void 0:e.token}),tileServers:this.layer.tileServers,request:this.request},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,n){n.level=e,n.row=t-t%this.size,n.col=i-i%this.size;const r=I(n);return this._tilemapCache.get(r)}get test(){}};_._maxPrefetch=4,_._prefetches=new h.Z({initialSize:n._maxPrefetch}),(0,r._)([(0,y.Cb)({constructOnly:!0})],_.prototype,"layer",void 0),(0,r._)([(0,y.Cb)({constructOnly:!0})],_.prototype,"minLOD",void 0),(0,r._)([(0,y.Cb)({constructOnly:!0})],_.prototype,"maxLOD",void 0),(0,r._)([(0,y.Cb)({constructOnly:!0})],_.prototype,"request",void 0),(0,r._)([(0,y.Cb)({constructOnly:!0})],_.prototype,"size",void 0),_=n=(0,r._)([(0,g.j)("esri.layers.support.TilemapCache")],_)}}]);
//# sourceMappingURL=9350.bed30ccc.chunk.js.map