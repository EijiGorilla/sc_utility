"use strict";(self.webpackChunksc_utility=self.webpackChunksc_utility||[]).push([[2581],{42581:(e,t,a)=>{a.r(t),a.d(t,{default:()=>O});var i,n,o=a(27366),s=(a(59486),a(80987)),r=a(10064),l=a(32718),d=a(77427),h=a(97642),u=a(66978),c=a(94172),y=a(49861),p=(a(93169),a(84936),a(69912)),g=a(25265),m=a(30651),f=a(83406),L=a(80457);(n=i||(i={})).MULTIPLIER="multiplier",n.ABSOLUTE="absoluteValue";var v=a(74354),C=a(21438),b=a(78211),M=a(83319),w=a(69086),k=a(6693),T=a(6061),E=a(56811),N=a(92581),I=a(29513),D=a(53866),_=a(848),x=a(29909);let R=class extends((0,T.q)((0,k.h7)((0,E.M)((0,h.R)(m.Z))))){constructor(e){if(super(e),this.dataPreloadedInLocalCache=!1,this.defaultLinkChartConfig=null,this._currentLinkChartConfig={layoutMode:"RADIAL_TREE"},this._graphTypeLookup=new Map,this.dataManager=null,this.knowledgeGraph=null,this.layers=new(s.Z.ofType(C.Z)),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map,this.linkChartExtent=new D.Z({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="LinkChartLayer",this.sublayerIdsCache=new Map,this.tables=new(s.Z.ofType(C.Z)),this.type="link-chart",this.chronologicalAuxiliaryGraphics=null,this._originalInclusionList=null===e||void 0===e?void 0:e.inclusionModeDefinition,null!==e&&void 0!==e&&e.dataPreloadedInLocalCache&&(null===e||void 0===e||!e.inclusionModeDefinition))throw new r.Z("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it");this.addHandles((0,c.YP)((()=>this.layers.concat(this.tables)),((e,t)=>this._handleSublayersChange(e,t)),c.Z_))}normalizeCtorArgs(e){if(!e)return{};const{url:t,title:a,dataPreloadedInLocalCache:i,defaultLinkChartConfig:n}=e;return{url:t,title:a,dataPreloadedInLocalCache:i,defaultLinkChartConfig:n}}_initializeLayerProperties(e){var t,a,i,n,o,s,d,h,u,c;if(!this.title&&this.url){const e=this.url.split("/");this.title=e[e.length-2]}const y=new Set;let p=[],g=[];if(e.inclusionModeDefinition&&(!e.inclusionModeDefinition.namedTypeDefinitions||e.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new r.Z("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");null!==(t=e.knowledgeGraph.dataModel.entityTypes)&&void 0!==t&&t.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),null!==(a=e.knowledgeGraph.dataModel.relationshipTypes)&&void 0!==a&&a.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),null!==(i=e.inclusionModeDefinition)&&void 0!==i&&i.generateAllSublayers?(p=null!==(n=e.knowledgeGraph.dataModel.entityTypes)&&void 0!==n?n:[],g=null!==(o=e.knowledgeGraph.dataModel.relationshipTypes)&&void 0!==o?o:[]):null!==(s=e.inclusionModeDefinition)&&void 0!==s&&s.namedTypeDefinitions&&(null===(d=e.inclusionModeDefinition)||void 0===d?void 0:d.namedTypeDefinitions.size)>0?null===(h=e.inclusionModeDefinition)||void 0===h||h.namedTypeDefinitions.forEach(((t,a)=>{var i,n;const o=this._graphTypeLookup.get(a);if(!o)return l.Z.getLogger(this).warn("A named type, ".concat(a,", was in the inclusion list that wasn't in the data model and will be removed")),void(null===(i=e.inclusionModeDefinition)||void 0===i||i.namedTypeDefinitions.delete(a));"relationship"===o.type?y.has(a)||(y.add(a),g.push(o)):"entity"===o.type?y.has(a)||(y.add(a),p.push(o)):(l.Z.getLogger(this).warn("A named type, ".concat(a,", was in the inclusion list that wasn't properly modeled and will be removed")),null===(n=e.inclusionModeDefinition)||void 0===n||n.namedTypeDefinitions.delete(a))})):(p=null!==(u=e.knowledgeGraph.dataModel.entityTypes)&&void 0!==u?u:[],g=null!==(c=e.knowledgeGraph.dataModel.relationshipTypes)&&void 0!==c?c:[]);const m=new v.Q({knowledgeGraph:e.knowledgeGraph,inclusionModeDefinition:e.inclusionModeDefinition});this.knowledgeGraph=e.knowledgeGraph,this.memberEntityTypes=p,this.memberRelationshipTypes=g,this.dataManager=m}load(e){const t=async()=>{var e;const t=[],a=[];this.loadLayerAssumingLocalCache(),await(0,b.xk)(this),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),null!==(e=this.dataManager.inclusionModeDefinition)&&void 0!==e&&e.namedTypeDefinitions.forEach((e=>{e.useAllData=!1})),await this._initializeDiagram(),this.layers.forEach((e=>{a.push(e.refreshCachedQueryEngine()),t.push(new Promise((t=>{e.on("layerview-create",(()=>{t(null)}))})))})),this.tables.forEach((e=>{a.push(e.refreshCachedQueryEngine())})),await Promise.all(a)};return this.addResolvingPromise(new Promise((a=>{(0,I.fetchKnowledgeGraph)(this.url).then((async i=>{var n,o,s;if(this._initializeLayerProperties({knowledgeGraph:i,inclusionModeDefinition:this._originalInclusionList}),null!==(n=this.dataManager.inclusionModeDefinition)&&void 0!==n&&null!==(n=n.namedTypeDefinitions)&&void 0!==n&&n.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},null!==(o=this.dataManager.knowledgeGraph.dataModel.entityTypes)&&void 0!==o&&o.forEach((e=>{var t;e.name&&(null===(t=this.dataManager.inclusionModeDefinition)||void 0===t||t.namedTypeDefinitions.set(e.name,{useAllData:!0}))})),null!==(s=this.dataManager.knowledgeGraph.dataModel.relationshipTypes)&&void 0!==s&&s.forEach((e=>{var t;e.name&&(null===(t=this.dataManager.inclusionModeDefinition)||void 0===t||t.namedTypeDefinitions.set(e.name,{useAllData:!0}))}))),this.dataPreloadedInLocalCache){const e=M.Z.getInstance();for(const[t,a]of null!==(r=null===(l=this.dataManager.inclusionModeDefinition)||void 0===l?void 0:l.namedTypeDefinitions)&&void 0!==r?r:[]){var r,l;for(const i of null!==(h=null===(c=a.members)||void 0===c?void 0:c.values())&&void 0!==h?h:[]){var h,c;const a=e.readFromStoreById("".concat(t,"__").concat(i.id));a&&(0,d.s1)(this.dataManager.sublayerCaches,t,(()=>new Map)).set(i.id,a)}}await t()}else{var y;const a="GEOGRAPHIC"===(null===(y=this.defaultLinkChartConfig)||void 0===y?void 0:y.layoutMode);this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,a,!0).then((async()=>{(0,u.k_)(e),await t()})))}a(null)}))}))),Promise.resolve(this)}set inclusionModeDefinition(e){"loaded"!==this.loadStatus&&"failed"!==this.loadStatus?this._set("inclusionModeDefinition",e):l.Z.getLogger(this).error("#inclusionModeDefinition","inclusionModeDefinition cannot be changed after the layer is loaded.")}async addRecords(e,t){let a=[];(null===t||void 0===t?void 0:t.cascadeAddRelationshipEndNodes)&&this.dataManager.knowledgeGraph.dataModel&&(a=await(0,w.bv)(e,this.dataManager.knowledgeGraph));const i=e.concat(a).filter((e=>{var t;return!(null!==(t=this.sublayerIdsCache.get(e.typeName))&&void 0!==t&&t.has(e.id))}));await this._handleNewRecords(i)}async removeRecords(e){let{cascadeRemoveRelationships:t=!0,recalculateLayout:a=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{cascadeRemoveRelationships:!0,recalculateLayout:!1},i=[];for(const l of e){var n,o;!1===(null===(n=this.dataManager.inclusionModeDefinition)||void 0===n||null===(n=n.namedTypeDefinitions)||void 0===n||null===(n=n.get(l.typeName))||void 0===n?void 0:n.useAllData)&&(null===(o=this.dataManager.inclusionModeDefinition)||void 0===o||null===(o=o.namedTypeDefinitions)||void 0===o||null===(o=o.get(l.typeName))||void 0===o||null===(o=o.members)||void 0===o?void 0:o.has(l.id))&&i.push(l)}if(t){const e=new Set,t=[];for(const a of i)if(this.dataManager.nodeConnectionsLookup.has(a.id))for(const t of this.dataManager.nodeConnectionsLookup.get(a.id))e.add(t);for(const a of e)if(this.dataManager.memberIdTypeLookup.has(a))for(const e of this.dataManager.memberIdTypeLookup.get(a))this.dataManager.relationshipTypeNames.has(e)&&t.push({id:a,typeName:e});i=i.concat(t)}this.dataManager.removeFromLayer(i);for(const l of i){var s;null!==(s=this.sublayerIdsCache.get(l.typeName))&&void 0!==s&&s.delete(l.id),this.dataManager.relationshipTypeNames.has(l.typeName)?this.relationshipLinkChartDiagramLookup.delete(l.id):this.entityLinkChartDiagramLookup.delete(l.id)}a&&await this._calculateLayoutWithSublayerTimeInfo(this._currentLinkChartConfig.layoutMode,this._currentLinkChartConfig.layoutOptions);const r=[];return this.layers.forEach((e=>{r.push(e.refreshCachedQueryEngine())})),await Promise.all(r),this._refreshNamedTypes(),i}async expand(e,t){const a=await this.dataManager.getConnectedRecordIds(e,t),i=a.filter((e=>{var t;return!(null!==(t=this.sublayerIdsCache.get(e.typeName))&&void 0!==t&&t.has(e.id))}));return await this._handleNewRecords(a),{records:i}}loadLayerAssumingLocalCache(){var e;const t=[...this.memberRelationshipTypes,...this.memberEntityTypes];this.originIdOf("layers")===g.s3.DEFAULTS?this._createSublayers(t,this.layers,(e=>!!e.geometryType)):this._updateSublayers(t,this.layers),this.originIdOf("tables")===g.s3.DEFAULTS?this._createSublayers(t,this.tables,(e=>!e.geometryType)):this._updateSublayers(t,this.tables),null===(e=this.dataManager.inclusionModeDefinition)||void 0===e||null===(e=e.namedTypeDefinitions)||void 0===e||e.forEach(((e,t)=>{var a;const i=(0,d.s1)(this.sublayerIdsCache,t,(()=>new Set));null===(a=e.members)||void 0===a||a.forEach((e=>{let{id:a,linkChartLocation:n}=e;if(i.add(a),n){const e=n instanceof L.Z?n:(0,f.GH)(n);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(a,e):this.entityLinkChartDiagramLookup.set(a,e)}}))}))}async calculateLinkChartLayout(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"RADIAL_TREE",t=arguments.length>1?arguments[1]:void 0;const a=[],i=[],n=[];this.dataManager.sublayerCaches.forEach(((e,t)=>{this.dataManager.entityTypeNames.has(t)?e.forEach((e=>{a.push({typeName:t,feature:e})})):this.dataManager.relationshipTypeNames.has(t)&&e.forEach((e=>{i.push({typeName:t,feature:e})}))})),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map;const o=new Map,s=new Map,d=new Map,h=new Map,u=new Uint8Array(a.length),c=new Float64Array(a.length),y=new Float64Array(a.length),p=new Float64Array(a.length),g=new Float64Array(a.length),m=new Uint32Array(i.length),L=new Uint32Array(i.length),v=new Float64Array(i.length),C=new Float64Array(i.length),M=[],w=new D.Z({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let k,T="FORCE_DIRECTED",E=0,I=0;const R=N.Dx.apply;switch(T="GEOGRAPHIC"===e?"FORCE_DIRECTED":e,T){case"FORCE_DIRECTED":k=N.BI.apply;break;case"COMMUNITY":k=N.L2.apply;break;case"HIERARCHICAL":k=N.Bc.apply;break;case"RADIAL_TREE":k=N.uc.apply;break;case"SMART_TREE":k=N.Yw.apply;break;default:k=N.cu.apply}let O=!1;a.forEach((a=>{var i,n,o,s,r,l;let{typeName:d,feature:m}=a;if("CHRONOLOGICAL_SINGLE"!==e&&"CHRONOLOGICAL_MULTIPLE"!==e&&null!==t&&void 0!==t&&null!==(i=t.lockedNodeLocations)&&void 0!==i&&i.has(m.attributes[b.mR])){"GEOGRAPHIC"===e&&this.dataManager.geographicLookup.has(d)?u[E]=N.iz.IsGeographic:u[E]=N.iz.None;const a=t.lockedNodeLocations.get(m.attributes[b.mR]);c[E]=a.x,y[E]=a.y}else if("GEOGRAPHIC"===e&&this.dataManager.geographicLookup.has(d)){var f;u[E]=N.iz.IsGeographic;let e=null;const t=m.attributes[this.dataManager.geographicLookup.get(d).name];switch(null===(f=this.dataManager.geographicLookup.get(d))||void 0===f?void 0:f.geometryType){case"esriGeometryPoint":c[E]=null===t||void 0===t?void 0:t.x,y[E]=null===t||void 0===t?void 0:t.y;break;case"esriGeometryPolygon":e=null===t||void 0===t?void 0:t.centroid,null!=(null===(n=e)||void 0===n?void 0:n.x)&&null!=(null===(o=e)||void 0===o?void 0:o.y)?(c[E]=e.x,y[E]=e.y):u[E]=N.iz.IsMovable;break;case"esriGeometryPolyline":case"esriGeometryMultipoint":e=null===t||void 0===t||null===(s=t.extent)||void 0===s?void 0:s.center,null!=(null===(r=e)||void 0===r?void 0:r.x)&&null!=(null===(l=e)||void 0===l?void 0:l.y)?(c[E]=e.x,y[E]=e.y):u[E]=N.iz.IsMovable;break;default:u[E]=N.iz.IsMovable}(null==c[E]||null==y[E]||Number.isNaN(c[E])||Number.isNaN(y[E]))&&(u[E]=N.iz.IsMovable,c[E]=0,y[E]=0)}else if("CHRONOLOGICAL_SINGLE"===e||"CHRONOLOGICAL_MULTIPLE"===e){var L,v;!O&&(null===t||void 0===t||null===(L=t.lockedNodeLocations)||void 0===L?void 0:L.has(m.attributes[b.mR]))&&(O=!0);const e=null===t||void 0===t||null===(v=t.timeInfoByTypeName)||void 0===v?void 0:v.get(d),a=null===e||void 0===e?void 0:e.startField,i=a&&null!==e&&void 0!==e&&e.startField?m.attributes[a]:null;p[E]=i?new Date(i).getTime():NaN;const n=null===e||void 0===e?void 0:e.endField,o=n&&null!==e&&void 0!==e&&e.endField?m.attributes[n]:null;g[E]=o?new Date(o).getTime():NaN,c[E]=0,y[E]=0,u[E]=N.iz.IsMovable}else u[E]=N.iz.IsMovable,c[E]=0,y[E]=0;h.set(m.attributes[b.mR],E),M[E]={feature:m,typeName:d},E++})),O&&l.Z.getLogger(this).warn("Locked node locations are not supported for chronological layout at this time.  Requested node locations were ignored");let A=!1;const G=new Map;i.forEach((a=>{var i;const o=a.feature.attributes[b.TY],s=a.feature.attributes[b.l6],r=h.get(o),l=h.get(s),d=null===t||void 0===t||null===(i=t.timeInfoByTypeName)||void 0===i?void 0:i.get(a.typeName),u=null!==t&&void 0!==t&&t.timeInfoByTypeName?null===d||void 0===d?void 0:d.startField:null,c=u?a.feature.attributes[u]:null,y=null===d||void 0===d?void 0:d.endField,p=y?a.feature.attributes[y]:null;if(void 0!==r&&void 0!==l){let t=o+"-"+s;"CHRONOLOGICAL_SINGLE"!==e&&"CHRONOLOGICAL_MULTIPLE"!==e||(t=t+"-"+c+"-"+p);const i=G.get(t);(null===i||void 0===i?void 0:i.has(a.typeName))||(m[I]=r,L[I]=l,"CHRONOLOGICAL_SINGLE"!==e&&"CHRONOLOGICAL_MULTIPLE"!==e||(v[I]=c?new Date(c).getTime():NaN,C[I]=p?new Date(p).getTime():NaN),void 0===i?G.set(t,new Map([[a.typeName,I]])):i.set(a.typeName,I),I++),n.push(a)}else A=!0,this.relationshipLinkChartDiagramLookup.set(o,null)})),A&&l.Z.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null");const S=this._validateLayoutSettings(e,t),P=this._convertLayoutSettingsToCalculationSettings(S);await(0,N.zD)();let H=!1,Z=null;if("CHRONOLOGICAL_SINGLE"===e||"CHRONOLOGICAL_MULTIPLE"===e){var F;let a;({success:H,links:Z,graphics:a}=R(u,c,y,p,g,m.subarray(0,I),L.subarray(0,I),v.subarray(0,I),C.subarray(0,I),"CHRONOLOGICAL_MULTIPLE"===e,null!==(F=null===t||void 0===t?void 0:t.chronologicalLayoutSettings)&&void 0!==F?F:{})),H&&(this.chronologicalAuxiliaryGraphics=a)}else({success:H,links:Z}=k(u,c,y,m.subarray(0,I),L.subarray(0,I),P.computationBudgetTime,P.idealEdgeLengthMultiplier,P.repulsionRadiusMultiplier));if(!H)throw new r.Z("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");for(let r=0;r<M.length;r++){if(y[r]>84.9999?y[r]=84.9999:y[r]<-84.9999&&(y[r]=-84.9999),c[r]>179.9999?c[r]=179.9999:c[r]<-179.9999&&(c[r]=-179.9999),M[r].feature.attributes[b.xD]=new _.Z(c[r],y[r]),o.has(M[r].typeName)){const e=o.get(M[r].typeName);null===e||void 0===e||e.set(M[r].feature.attributes[b.mR],M[r].feature)}else{const e=new Map;e.set(M[r].feature.attributes[b.mR],M[r].feature),o.set(M[r].typeName,e)}d.set(M[r].feature.attributes[b.mR],M[r].feature);const e=(0,f.GH)(M[r].feature.attributes[b.xD]);this.entityLinkChartDiagramLookup.set(M[r].feature.attributes[b.mR],M[r].feature.attributes[b.xD]?e:null),M[r].feature.attributes[b.xD].x<w.xmin&&(w.xmin=M[r].feature.attributes[b.xD].x),M[r].feature.attributes[b.xD].x>w.xmax&&(w.xmax=M[r].feature.attributes[b.xD].x),M[r].feature.attributes[b.xD].y<w.ymin&&(w.ymin=M[r].feature.attributes[b.xD].y),M[r].feature.attributes[b.xD].y>w.ymax&&(w.ymax=M[r].feature.attributes[b.xD].y)}if(this.linkChartExtent.xmin=w.xmin,this.linkChartExtent.xmax=w.xmax,this.linkChartExtent.ymin=w.ymin,this.linkChartExtent.ymax=w.ymax,!Z)throw new r.Z("knowledge-graph:layout-failed","Attempting to retrieve link geometry from diagram engine failed");const U=new Map,z=new Map,B=new Map,j=new Set;for(let r=0;r<n.length;r++){var W;const a=[],i=n[r],o=i.feature.attributes[b.TY],u=i.feature.attributes[b.l6];let c=o+"-"+u;if("CHRONOLOGICAL_SINGLE"===e||"CHRONOLOGICAL_MULTIPLE"===e){var Y;const e=null===t||void 0===t||null===(Y=t.timeInfoByTypeName)||void 0===Y?void 0:Y.get(i.typeName),a=null!==t&&void 0!==t&&t.timeInfoByTypeName?null===e||void 0===e?void 0:e.startField:null,n=a?i.feature.attributes[a]:null,o=null===e||void 0===e?void 0:e.endField;c+="-"+n+"-"+(o?i.feature.attributes[o]:null)}const y=G.get(c).get(i.typeName),p=0===y?0:null===(W=Z)||void 0===W?void 0:W.vertexEndIndex[y-1];if(!j.has(y)){if(j.add(y),Z.types[y]===N.Un.Recursive){const e=[Z.vertices[2*p],Z.vertices[2*p+1]],t=[Z.vertices[2*(p+1)],Z.vertices[2*(p+1)+1]],i=[.5*(e[0]+t[0]),.5*(e[1]+t[1])],n=[i[0]-e[0],i[1]-e[1]],o=[i[0]+n[1],i[1]-n[0]],s=[i[0]-n[1],i[1]+n[0]];a.push(e),a.push(o),a.push(t),a.push(s),a.push(e)}else{if(Z.types[y]!==N.Un.Regular){l.Z.getLogger(this).warn("A relationship generated an unsupported link geometry type.  It will not be rendered");continue}for(let e=p;e<Z.vertexEndIndex[y];e++)a.push([Z.vertices[2*e],Z.vertices[2*e+1]])}if("CHRONOLOGICAL_SINGLE"!==e&&"CHRONOLOGICAL_MULTIPLE"!==e){var Q,q;const e=null===(Q=M[h.get(o)])||void 0===Q?void 0:Q.feature.attributes[b.xD],t=null===(q=M[h.get(u)])||void 0===q?void 0:q.feature.attributes[b.xD];a[0][0]===e.x&&a[0][1]===e.y||(a[0]=[e.x,e.y]),a[a.length-1][0]===t.x&&a[a.length-1][1]===t.y||(a[a.length-1]=[t.x,t.y])}for(let e=1;e<a.length-1;e++)a[e][1]>85.5?a[e][1]=85.5:a[e][1]<-85.5&&(a[e][1]=-85.5),a[e][0]>179.9999?a[e][0]=179.9999:a[e][0]<-179.9999&&(a[e][0]=-179.9999);U.has(c)?U.get(c).push(a):U.set(c,[a])}const g=U.get(c);z.has(c)||(z.set(c,new Map),B.set(c,new Map));const m=z.get(c),L=B.get(c);m.has(i.typeName)||(m.set(i.typeName,g.shift()),L.set(i.typeName,0));const v=m.get(i.typeName);L.set(i.typeName,L.get(i.typeName)+1);const C=new x.Z({paths:[v]});if(i.feature.attributes[b.xD]=C,s.has(i.typeName)){const e=s.get(i.typeName);null===e||void 0===e||e.set(i.feature.attributes[b.mR],i.feature)}else{const e=new Map;e.set(i.feature.attributes[b.mR],i.feature),s.set(i.typeName,e)}d.set(i.feature.attributes[b.mR],i.feature);const w=(0,f.GH)(i.feature.attributes[b.xD]);this.relationshipLinkChartDiagramLookup.set(i.feature.attributes[b.mR],i.feature.attributes[b.xD]?w:null)}for(const r of n){var K,V;r.feature.attributes[b._P]=null!==(K=null===(V=B.get(r.feature.attributes[b.TY]+"-"+r.feature.attributes[b.l6]))||void 0===V?void 0:V.get(r.typeName))&&void 0!==K?K:null}return this._currentLinkChartConfig={layoutMode:e,layoutOptions:S},{nodes:o,links:s,idMap:d}}async applyNewLinkChartLayout(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"RADIAL_TREE",t=arguments.length>1?arguments[1]:void 0;const a=[];await this._calculateLayoutWithSublayerTimeInfo(e,t),this.layers.forEach((e=>{a.push(e.refreshCachedQueryEngine())})),await Promise.all(a),this._refreshNamedTypes()}getCurrentNodeLocations(){var e;const t=new Map;return null!==(e=this.dataManager.inclusionModeDefinition)&&void 0!==e&&null!==(e=e.namedTypeDefinitions)&&void 0!==e&&e.forEach((e=>{var a;null===e||void 0===e||null===(a=e.members)||void 0===a||a.forEach((e=>{const a=e.linkChartLocation;let i;const n=e.id;a&&(i="x"in a?{x:a.x,y:a.y}:{x:a.coords[0],y:a.coords[1]},t.set(n,new _.Z({x:i.x,y:i.y})))}))})),t}async synchronizeInclusionListWithCache(){return new Promise((e=>{var t;null!==(t=this.dataManager.inclusionModeDefinition)&&void 0!==t&&t.namedTypeDefinitions.forEach(((e,t)=>{if(e.useAllData=!1,e.members&&e.members.size>0){if(!this.dataManager.sublayerCaches.get(t))return;const a=new Set(Array.from(this.dataManager.sublayerCaches.get(t).keys()));Array.from(e.members.keys()).filter((e=>!a.has(e))).forEach((t=>{var a;null===(a=e.members)||void 0===a||a.delete(t)}))}})),e()}))}async refreshLinkChartCache(e){await this.dataManager.refreshCacheContent(e);const t=[];this.layers.forEach((e=>{t.push(e.refreshCachedQueryEngine())})),await Promise.all(t),this._refreshNamedTypes()}async connectBetweenEntities(e){let t=[];for(const i of this.dataManager.relationshipTypeNames){const e=this.sublayerIdsCache.get(i);e&&(t=t.concat(Array.from(e.keys())))}const a=await this.dataManager.getRelationshipsBetweenNodes(e,t);return await this._handleNewRecords(a),{records:a}}async connectFromEntities(e){let t=[];for(const n of this.dataManager.relationshipTypeNames){const e=this.sublayerIdsCache.get(n);e&&(t=t.concat(Array.from(e.keys())))}let a=[];for(const n of this.dataManager.entityTypeNames){const e=this.sublayerIdsCache.get(n);e&&(a=a.concat(Array.from(e)))}const i=await this.dataManager.getRelationshipsFromNodes(e,a,t);return await this._handleNewRecords(i),{records:i}}getCurrentLayout(){return this._currentLinkChartConfig.layoutMode}async _calculateLayoutWithSublayerTimeInfo(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"RADIAL_TREE",t=arguments.length>1?arguments[1]:void 0;const a=new Map;this.layers.forEach((e=>{a.set(e.objectType.name,e.timeInfo)})),await this.calculateLinkChartLayout(e,{timeInfoByTypeName:a,...t})}async _handleNewRecords(e){const t=[];this.dataManager.addToLayer(e);for(const i of e)this.sublayerIdsCache.has(i.typeName)||(this.sublayerIdsCache.set(i.typeName,new Set),t.push(i.typeName)),this.sublayerIdsCache.get(i.typeName).add(i.id);for(const i of t){const e=this._graphTypeLookup.get(i);if(e){const t=this._createSublayer(e);"entity"===e.type?this.dataManager.entityTypeNames.add(i):this.dataManager.relationshipTypeNames.add(i),t.geometryType?this.layers.push(t):this.tables.push(t),this.dataManager.sublayerCaches.set(i,new Map)}}await(0,b.xk)(this,t),await this.dataManager.refreshCacheContent(e.map((e=>e.id)));const a=Object.assign({},this._currentLinkChartConfig.layoutOptions);a.lockedNodeLocations=new Map;for(const[i,n]of this.entityLinkChartDiagramLookup.entries())n&&a.lockedNodeLocations.set(i,new _.Z(n.coords[0],n.coords[1]));await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,a)}_createSublayers(e,t,a){e.forEach((e=>{const i=this._createSublayer(e);a(i)&&t.push(i),this._updateSublayerCaches(e)}))}_updateSublayers(e,t){t.forEach((t=>{t.parentCompositeLayer=this;const a=e.find((e=>e.type===t.graphType&&e.name===t.graphTypeName));a&&(t.objectType=a,t.read({title:a.name},{origin:"service"}),this._updateSublayerCaches(a))}))}_updateSublayerCaches(e){const t=this.dataManager.sublayerCaches;t.has(e.name)||t.set(e.name,new Map)}async _initializeDiagram(){var e;this.defaultLinkChartConfig?this.defaultLinkChartConfig.doNotRecalculateLayout?(null!==(e=this.dataManager.inclusionModeDefinition)&&void 0!==e&&null!==(e=e.namedTypeDefinitions)&&void 0!==e&&e.forEach(((e,t)=>{var a;null===e||void 0===e||null===(a=e.members)||void 0===a||a.forEach((e=>{const a=e.linkChartLocation;let i;const n=e.id;if(!a)return;i="x"in a?{x:a.x,y:a.y}:{x:a.coords[0],y:a.coords[1]};const o=(0,f.GH)(i);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(n,o):this.entityLinkChartDiagramLookup.set(n,o),this.linkChartExtent.xmin>i.x&&(this.linkChartExtent.xmin=i.x),this.linkChartExtent.xmax<i.x&&(this.linkChartExtent.xmax=i.x),this.linkChartExtent.ymin>i.y&&(this.linkChartExtent.ymin=i.y),this.linkChartExtent.ymax<i.y&&(this.linkChartExtent.ymax=i.y)}))})),this.memberRelationshipTypes.forEach((e=>{var t;e.name&&(null===(t=this.dataManager.sublayerCaches.get(e.name))||void 0===t||t.forEach((e=>{const t=this.relationshipLinkChartDiagramLookup.get(e.attributes[b.TY]),a=this.relationshipLinkChartDiagramLookup.get(e.attributes[b.l6]);if(t&&a){const i=(0,f.GH)(new x.Z({paths:[[[t.coords[0],t.coords[1]],[a.coords[0],a.coords[1]]]]}));this.relationshipLinkChartDiagramLookup.set(e.attributes[b.mR],i)}else this.relationshipLinkChartDiagramLookup.set(e.attributes[b.mR],null)})))}))):await this._calculateLayoutWithSublayerTimeInfo(this.defaultLinkChartConfig.layoutMode,{lockedNodeLocations:this.getCurrentNodeLocations(),...this.defaultLinkChartConfig.layoutOptions||{}}):await this._calculateLayoutWithSublayerTimeInfo("RADIAL_TREE",{lockedNodeLocations:this.getCurrentNodeLocations()})}_refreshNamedTypes(){for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}_validateLayoutSettings(e,t){var a;const n=e=>"number"==typeof e&&!isNaN(e),o={organicLayoutSettings:{},chronologicalLayoutSettings:{}};if(!new Set(["FORCE_DIRECTED","COMMUNITY","GEOGRAPHIC","CHRONOLOGICAL_MULTIPLE","CHRONOLOGICAL_SINGLE"]).has(e)||!t)return o;null!==(a=t.organicLayoutSettings)&&void 0!==a||(t.organicLayoutSettings={});const{computationBudgetTime:s,repulsionRadiusMultiplier:r,idealEdgeLength:d,idealEdgeLengthType:h}=t.organicLayoutSettings;if((e=>n(e)&&e>=1)(s)?o.organicLayoutSettings.computationBudgetTime=s:void 0!==s&&l.Z.getLogger(this).warn("Invalid layout computationBudgetTime setting, will revert to default setting"),(e=>n(e)&&e>=1)(r)?o.organicLayoutSettings.repulsionRadiusMultiplier=r:void 0!==r&&l.Z.getLogger(this).warn("Invalid layout repulsionRadiusMultiplier setting, will revert to default setting"),"GEOGRAPHIC"===e&&(void 0!==d||void 0!==h)&&((e=>Object.values(i).includes(e))(h)?o.organicLayoutSettings.idealEdgeLengthType=h:void 0!==h&&l.Z.getLogger(this).warn('Invalid layout idealEdgeLengthType setting, will revert to "multiplier" setting'),(e=>n(e)&&e>=0)(d)?o.organicLayoutSettings.idealEdgeLength=d:void 0!==d&&l.Z.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting")),("CHRONOLOGICAL_MULTIPLE"===e||"CHRONOLOGICAL_SINGLE"===e)&&t.chronologicalLayoutSettings){const e=t.chronologicalLayoutSettings;e.durationLineWidth&&e.durationLineWidth<0&&l.Z.getLogger(this).warn("Invalid layout durationLineWidth setting, will revert to default setting")}return o}_convertLayoutSettingsToCalculationSettings(e){var t;null!==(t=e.organicLayoutSettings)&&void 0!==t||(e.organicLayoutSettings={});let a=e.organicLayoutSettings.idealEdgeLength;return e.organicLayoutSettings.idealEdgeLengthType===i.ABSOLUTE&&(void 0===a?a=-1:a*=-1),{computationBudgetTime:e.organicLayoutSettings.computationBudgetTime,repulsionRadiusMultiplier:e.organicLayoutSettings.repulsionRadiusMultiplier,idealEdgeLengthMultiplier:a}}_createSublayer(e){return new C.Z({objectType:e,parentCompositeLayer:this,graphType:e.type})}_handleSublayersChange(e,t){t&&(t.forEach((e=>{e.parent=null})),this.removeHandles("sublayers-owner")),e&&(e.forEach((e=>{e.parent=this})),this.addHandles([e.on("after-add",(e=>{let{item:t}=e;t.parent=this})),e.on("after-remove",(e=>{let{item:t}=e;t.parent=null}))],"sublayers-owner"))}};(0,o._)([(0,y.Cb)()],R.prototype,"dataPreloadedInLocalCache",void 0),(0,o._)([(0,y.Cb)()],R.prototype,"defaultLinkChartConfig",void 0),(0,o._)([(0,y.Cb)()],R.prototype,"dataManager",void 0),(0,o._)([(0,y.Cb)()],R.prototype,"inclusionModeDefinition",null),(0,o._)([(0,y.Cb)()],R.prototype,"knowledgeGraph",void 0),(0,o._)([(0,y.Cb)({type:s.Z.ofType(C.Z),json:{write:{ignoreOrigin:!0}}})],R.prototype,"layers",void 0),(0,o._)([(0,y.Cb)()],R.prototype,"entityLinkChartDiagramLookup",void 0),(0,o._)([(0,y.Cb)()],R.prototype,"relationshipLinkChartDiagramLookup",void 0),(0,o._)([(0,y.Cb)()],R.prototype,"linkChartExtent",void 0),(0,o._)([(0,y.Cb)()],R.prototype,"memberEntityTypes",void 0),(0,o._)([(0,y.Cb)()],R.prototype,"memberRelationshipTypes",void 0),(0,o._)([(0,y.Cb)({type:["LinkChartLayer"]})],R.prototype,"operationalLayerType",void 0),(0,o._)([(0,y.Cb)()],R.prototype,"sublayerIdsCache",void 0),(0,o._)([(0,y.Cb)({type:s.Z.ofType(C.Z),json:{write:{ignoreOrigin:!0}}})],R.prototype,"tables",void 0),(0,o._)([(0,y.Cb)({json:{read:!1}})],R.prototype,"type",void 0),(0,o._)([(0,y.Cb)({json:{read:!1}})],R.prototype,"chronologicalAuxiliaryGraphics",void 0),R=(0,o._)([(0,p.j)("esri.layers.LinkChartLayer")],R);const O=R}}]);
//# sourceMappingURL=2581.1523a273.chunk.js.map