"use strict";(self.webpackChunksc_utility=self.webpackChunksc_utility||[]).push([[6077],{76077:(e,t,i)=>{i.r(t),i.d(t,{FeatureTileTree3DDebugger:()=>c});var s=i(27366),l=(i(59486),i(94172)),o=i(49861),n=(i(25243),i(63780),i(93169),i(69912)),r=i(46634),a=i(87287),h=i(80885);let c=class extends a.q{get updating(){var e,t;return null!==(e=null===(t=this._watchUpdatingTracking)||void 0===t?void 0:t.updating)&&void 0!==e&&e}constructor(e){super(e),this._watchUpdatingTracking=new r.R}initialize(){const{featureTiles:e}=this.view;this.addHandles(e.addClient()),this._watchUpdatingTracking.addOnCollectionChange((()=>null===e||void 0===e?void 0:e.tiles),(()=>this.update()),l.nn)}destroy(){this._watchUpdatingTracking.destroy()}getTiles(){const e=e=>{const[t,i,s]=e.lij;return h.Z.fromExtent(this.view.featureTiles.tilingScheme.getExtentGeometry(t,i,s))};return this.view.featureTiles.tiles.toArray().sort(((e,t)=>e.loadPriority-t.loadPriority)).map((t=>({...t,geometry:e(t)})))}};(0,s._)([(0,o.Cb)()],c.prototype,"_watchUpdatingTracking",void 0),(0,s._)([(0,o.Cb)()],c.prototype,"updating",null),(0,s._)([(0,o.Cb)()],c.prototype,"view",void 0),c=(0,s._)([(0,n.j)("esri.views.3d.layers.support.FeatureTileTree3DDebugger")],c)},87287:(e,t,i)=>{i.d(t,{q:()=>v});var s=i(27366),l=i(51995),o=i(52639),n=(i(51508),i(7138)),r=i(80987),a=i(16889),h=i(49861),c=(i(25243),i(63780),i(93169),i(69912)),d=i(62554),y=i(61459),g=i(58009),u=i(87037),p=i(61054),b=i(98351),w=i(21897);const _=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let v=class extends n.Z{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=_.map((e=>new y.Z({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}}))),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=this.getTiles(),t=new Array,i=new Set((this._labels.size,this._labels.keys()));e.forEach(((s,n)=>{const h=s.lij.toString();i.delete(h);const c=s.lij[0],y=s.geometry;if(this.enablePolygons&&!this._polygons.has(h)){const e=new o.Z({geometry:y,symbol:this._symbols[c%this._symbols.length]});this._polygons.set(h,e),t.push(e)}if(this.enableLabels){const i=(e=>{if(null!=e.label)return e.label;let t=e.lij.toString();return null!=e.loadPriority&&(t+=" (".concat(e.loadPriority,")")),t})(s),c=n/(e.length-1),_=(0,a.t7)(0,200,c),v=(0,a.t7)(20,6,c)/.75,m=null!=s.loadPriority&&s.loadPriority>=e.length,f=new l.Z([_,m?0:_,m?0:_]),T="3d"===this.view.type?()=>new d.Z({verticalOffset:new p.Z({screenLength:40/.75}),callout:new b.Z({color:new l.Z("white"),border:new w.Z({color:new l.Z("black")})}),symbolLayers:new r.Z([new u.Z({text:i,halo:{color:"white",size:1/.75},material:{color:f},size:v})])}):()=>new g.Z({text:i,haloColor:"white",haloSize:1/.75,color:f,size:v}),Z=this._labels.get(h);if(Z){const e=T();null!=Z.symbol&&JSON.stringify(e)===JSON.stringify(Z.symbol)||(Z.symbol=e)}else{const e=new o.Z({geometry:y.extent.center,symbol:T()});this._labels.set(h,e),t.push(e)}}}));const s=new Array;i.forEach((e=>{const t=this._polygons.get(e);null!=t&&(s.push(t),this._polygons.delete(e));const i=this._labels.get(e);null!=i&&(s.push(i),this._labels.delete(e))})),this.view.graphics.removeMany(s),this.view.graphics.addMany(t)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};(0,s._)([(0,h.Cb)({constructOnly:!0})],v.prototype,"view",void 0),(0,s._)([(0,h.Cb)({readOnly:!0})],v.prototype,"updating",void 0),(0,s._)([(0,h.Cb)()],v.prototype,"enabled",null),v=(0,s._)([(0,c.j)("esri.views.support.TileTreeDebugger")],v)}}]);
//# sourceMappingURL=6077.a6c34256.chunk.js.map