"use strict";(self.webpackChunksc_utility=self.webpackChunksc_utility||[]).push([[5972],{15972:(e,s,t)=>{t.d(s,{uploadAssets:()=>I});var o=t(76200),n=t(93169),r=t(32718),a=t(66978),i=t(38499),l=t(35995),c=t(71907),u=t(17493),p=t(25889);const d={upload:{createFromFiles:.8,loadMesh:.2},uploadAssetBlobs:{prepareAssetItems:.9,uploadAssetItems:.1},uploadConvertibleSource:{uploadEditSource:.5,serviceAssetsToGlb:.5},uploadLocalMesh:{meshToAssetBlob:.5,uploadAssetBlobs:.5}};var m=t(25899),f=t(42537),h=t(77427);function g(e){return new w(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>{},arguments.length>2?arguments[2]:void 0)}class w{constructor(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>{},t=arguments.length>2?arguments[2]:void 0;if(this.onProgress=s,this.taskName=t,this._progressMap=new Map,this._startTime=void 0,this._timingsMap=new Map,"number"==typeof e){this._weights={};for(let s=0;s<e;s++){const t=s,o=1/e;this._weights[t]=o,this._progressMap.set(t,0)}}else this._weights=e;this.emitProgress()}emitProgress(){let e=0;for(const[o,n]of this._progressMap.entries())e+=n*this._weights[o];if(1===e&&(0,n.Z)("enable-feature:esri-3dofl-upload-timings")){var s;const e=Math.round(performance.now()-(null!==(s=this._startTime)&&void 0!==s?s:0))/1e3;console.log("".concat(this.taskName," done in ").concat(e," sec"));for(const[s,o]of this._timingsMap){var t;const n=Math.round(o.end-o.start)/1e3,r=Math.round(n/e*100);console.log(null!==(t=this.taskName)&&void 0!==t?t:"Task",{stepKey:s,stepTime:n,relativeTime:r})}}this.onProgress(e)}setProgress(e,s){if(this._progressMap.set(e,s),(0,n.Z)("enable-feature:esri-3dofl-upload-timings")){var t;const o=performance.now();null!==(t=this._startTime)&&void 0!==t||(this._startTime=o);const n=(0,h.s1)(this._timingsMap,e,(()=>({start:o,end:0})));1===s&&(n.end=o)}this.emitProgress()}simulate(e,s){return y((s=>this.setProgress(e,s)),s)}makeOnProgress(e){return s=>this.setProgress(e,s)}}function y(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e=>{},s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:k;const t=performance.now();e(0);const o=setInterval((()=>{const o=performance.now()-t,n=1-Math.exp(-o/s);e(n)}),b);return(0,f.kB)((()=>{clearInterval(o),e(1)}))}function v(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:_;return(0,i.up)((0,i._H)(e*T/s))}const _=10,P=10,T=8e-6,b=(0,i.HA)(50),k=(0,i.HA)(1e3),A=1e6,j=20*A,F=2e9,M=3;async function S(e,s,t){let{data:n,name:r,description:i}=e,c=null;try{const e=(0,l.v_)(s,"uploads"),p=(0,l.v_)(e,"info"),{data:d}=await(0,o.Z)(p,{query:{f:"json"},responseType:"json"});(0,a.k_)(t);const f=(0,m.M8)(s),h=d.maxUploadFileSize*A,w=f?F:h,y=f?Math.min(j,h):j;if(n.size>w)throw new Error("Data too large");const _=(0,l.v_)(e,"register"),{data:P}=await(0,o.Z)(_,{query:{f:"json",itemName:(u=r,u.replaceAll("/","_").replaceAll("\\","_")),description:i},responseType:"json",method:"post"});if((0,a.k_)(t),!P.success)throw new Error("Registration failed");const{itemID:T}=P.item;c=(0,l.v_)(e,T);const b=(0,l.v_)(c,"uploadPart"),k=Math.ceil(n.size/y),S=new Array;for(let s=0;s<k;++s)S.push(n.slice(s*y,Math.min((s+1)*y,n.size)));const E=S.slice().reverse(),I=new Array,N=g(k,null===t||void 0===t?void 0:t.onProgress,"uploadItem"),C=async()=>{for(;0!==E.length;){const e=S.length-E.length,s=E.pop(),n=new FormData,r=N.simulate(e,v(s.size));try{n.append("f","json"),n.append("file",s),n.append("partId","".concat(e));const{data:r}=await(0,o.Z)(b,{timeout:0,body:n,responseType:"json",method:"post"});if((0,a.k_)(t),!r.success)throw new Error("Part upload failed")}finally{r.remove()}}};for(let s=0;s<M&&0!==E.length;++s)I.push(C());await Promise.all(I);const O=(0,l.v_)(c,"commit"),{data:x}=await(0,o.Z)(O,{query:{f:"json",parts:S.map(((e,s)=>s)).join(",")},responseType:"json",method:"post"});if((0,a.k_)(t),!x.success)throw new Error("Commit failed");return x.item}catch(p){if(null!=c){const e=(0,l.v_)(c,"delete");await(0,o.Z)(e,{query:{f:"json"},responseType:"json",method:"post"})}throw p}var u}var E=t(18277);async function I(e,s,t){var o;const n=e.length;if(!n)return null!==t&&void 0!==t&&null!==(o=t.onProgress)&&void 0!==o&&o.call(t,1),[];const r=g(n,null===t||void 0===t?void 0:t.onProgress,"uploadAssets");return Promise.all(e.map(((e,o)=>async function(e,s,t){var o;let{layer:n,ongoingUploads:r}=s;const l=r.get(e);if(l)return l;if(!function(e){return!!e.infoFor3D&&!!e.url}(n))throw new p.sc;if(function(e,s){const{parsedUrl:t}=s;return null!=t&&e.metadata.externalSources.some((e=>(0,u.JG)(e,t)))}(e,n))return null!==t&&void 0!==t&&null!==(o=t.onProgress)&&void 0!==o&&o.call(t,1),e;const m=async function(e,s,t){const{metadata:o}=e,{displaySource:n}=o,r=N(null===n||void 0===n?void 0:n.source,s),l=!!r,u=o.externalSources.length>0,m=l?async function(e,s,t){return{source:await O(e,s,t),original:!0}}(r,s,t):u?async function(e,s,t){const o=L(s),{externalSources:n}=e.metadata,r=function(e,s){for(const t of e){const e=N(t.source,s);if(e)return e}return null}(n,s);if(!r)throw new p.kE;const a=g(d.uploadConvertibleSource,null===t||void 0===t?void 0:t.onProgress,"uploadConvertibleSource"),l=await O(r,s,{onProgress:a.makeOnProgress("uploadEditSource")});e.addExternalSources([{source:l,original:!0}]);const c=r.reduce(((e,s)=>{let{asset:t}=s;return t instanceof File?e+t.size:e}),0),u=a.simulate("serviceAssetsToGlb",function(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:P;return(0,i.up)((0,i._H)(e*T/s))}(c));try{return{source:await D(l,s,o)}}finally{u.remove()}}(e,s,t):async function(e,s,t){const o=g(d.uploadLocalMesh,null===t||void 0===t?void 0:t.onProgress,"uploadLocalMesh"),n=async function(e,s,t){const o=L(s),n=await e.load(t),r=await n.toBinaryGLTF({origin:n.origin,signal:null===t||void 0===t?void 0:t.signal,ignoreLocalTransform:!0});return(0,a.k_)(t),{blob:new Blob([r],{type:"model/gltf-binary"}),assetName:"".concat((0,c.zS)(),".glb"),assetType:o}}(e,s,{...t,onProgress:o.makeOnProgress("meshToAssetBlob")});return{source:await x([n],s,{...t,onProgress:o.makeOnProgress("uploadAssetBlobs")}),extent:e.extent.clone(),original:!0}}(e,s,t),f=await m;return(0,a.k_)(t),e.addExternalSources([f]),e}(e,n,t);r.set(e,m);try{await m}finally{r.delete(e)}return e}(e,s,{...t,onProgress:r.makeOnProgress(o)}))))}function N(e,s){if(!e)return null;const{infoFor3D:{supportedFormats:t,editFormats:o}}=s,n=(0,u.zE)(e),r=new Array;let a=!1;for(let i=0;i<n.length;++i){const e=C(n[i],t);if(!e)return null;o.includes(e.assetType)&&(a=!0),r.push(e)}return a?r:null}function C(e,s){const t=(0,u.vj)(e,s);return t?{asset:e,assetType:t}:null}async function O(e,s,t){return x(e.map((e=>async function(e,s){const{asset:t,assetType:o}=e;if(t instanceof File)return{blob:t,assetName:t.name,assetType:o};const n=await t.toBlob(s);return(0,a.k_)(s),{blob:n,assetName:t.assetName,assetType:o}}(e,t))),s,t)}async function x(e,s,t){const o=g(d.uploadAssetBlobs,null===t||void 0===t?void 0:t.onProgress,"uploadAssetBlobs"),n=await function(e,s,t){const o=g(e.length,null===t||void 0===t?void 0:t.onProgress,"prepareAssetItems");return Promise.all(e.map((async(e,n)=>{const i=async function(e,s,t){const{blob:o,assetType:n,assetName:i}=e;let c=null;try{const e=await S({data:o,name:i},s.url,t);(0,a.k_)(t),c={assetType:n,assetUploadId:e.itemID}}catch(k){(0,a.r9)(k),r.Z.getLogger("esri.layers.graphics.sources.support.uploadAssets").warnOnce("Service ".concat(s.url," does not support the REST Uploads API."))}if(!c){const e=await(0,l.IR)(o);if((0,a.k_)(t),!e.isBase64)throw new p.AC;c={assetType:n,assetData:e.data}}if(!c)throw new p._C;return{item:c,assetName:i}}(await e,s,{...t,onProgress:o.makeOnProgress(n)});return(0,a.k_)(t),i})))}(e,s,{...t,onProgress:o.makeOnProgress("prepareAssetItems")});(0,a.k_)(t);const i=n.map((e=>{let{item:s}=e;return s})),{uploadResults:c}=await B(i,s,{...t,onProgress:o.makeOnProgress("uploadAssetItems")});return(0,a.k_)(t),e.map(((e,t)=>function(e,s,t){const{success:o}=s;if(!o){const{error:t}=s;throw new p.fB(e.assetName,t)}const{assetHash:n}=s,{assetName:r,item:{assetType:a}}=e,{infoFor3D:{supportedFormats:i}}=t,l=(0,E.d1)(a,i);if(!l)throw new p.jO(a);return new u.CP(r,l,[new u.LL("".concat(t.parsedUrl.path,"/assets/").concat(n),n)])}(n[t],c[t],s)))}async function B(e,s,t){const n=y(null===t||void 0===t?void 0:t.onProgress);try{const n=await(0,o.Z)((0,l.v_)(s.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(e)},method:"post",responseType:"json"});if((0,a.k_)(t),n.data.uploadResults.length!==e.length)throw new p.Fz(e.length,n.data.uploadResults.length);return n.data}finally{n.remove()}}async function D(e,s,t){var o;const n=e.map((e=>{let{assetName:s,parts:t}=e;return{assetName:s,assetHash:t[0].partHash}})),r=null===(o=s.capabilities)||void 0===o?void 0:o.operations.supportsAsyncConvert3D,a={f:"json",assets:JSON.stringify(n),transportType:"esriTransportTypeUrl",targetFormat:t,async:r},i=(0,l.v_)(s.parsedUrl.path,"convert3D");let c;try{c=(await(r?Z:U)(i,{query:a,responseType:"json",timeout:0})).data}catch(k){throw new p.s8}const{supportedFormats:d}=s.infoFor3D;return c.assets.map((e=>{const s=(0,E.S0)(e.contentType,d);if(!s)throw new p.jO(s);return new u.CP(e.assetName,e.contentType,[new u.LL(e.assetURL,e.assetHash)])}))}function U(e,s){return(0,o.Z)(e,s)}async function Z(e,s){const t=(await(0,o.Z)(e,s)).data.statusUrl;for(;;){const e=(await(0,o.Z)(t,{query:{f:"json"},responseType:"json"})).data;switch(e.status){case"Completed":return(0,o.Z)(e.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(e.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await(0,a.e4)(R)}}function L(e){var s;const{infoFor3D:t}=e,o=null!==(s=(0,E.S0)("model/gltf-binary",t.supportedFormats))&&void 0!==s?s:(0,E.Ow)("glb",t.supportedFormats);if(!o)throw new p.ks;return o}const R=(0,i.HA)(1e3)}}]);
//# sourceMappingURL=5972.8b217635.chunk.js.map