"use strict";(self.webpackChunksc_utility=self.webpackChunksc_utility||[]).push([[5064],{5064:(e,t,r)=>{r.r(t),r.d(t,{default:()=>U});var s=r(27366),o=(r(59486),r(44055)),i=(r(94931),r(15126),r(98689),r(57823),r(94354),r(49018),r(34999),r(28189),r(9014),r(40464)),n=r(97642),a=r(66978),u=r(35995),l=r(49861),p=r(93169),d=r(32718),c=(r(84936),r(69912)),h=r(27823),y=r(30651),m=r(10064),f=r(54472),b=r(70431),g=r(61040),v=r(49818),_=r(53866),C=r(80885);let S=class extends f.Z{constructor(){super(...arguments),this.type="geojson",this.refresh=(0,a.Ds)((async e=>{await this.load();const{extent:t,timeExtent:r}=await this._connection.invoke("refresh",e);return this.sourceJSON.extent=t,r&&(this.sourceJSON.timeInfo.timeExtent=[r.start,r.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}}))}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}applyEdits(e){return this.load().then((()=>this._applyEdits(e)))}openPorts(){return this.load().then((()=>this._connection.openPorts()))}queryFeatures(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.load(t).then((()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t))).then((e=>v.Z.fromJSON(e)))}queryFeaturesJSON(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.load(t).then((()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t)))}queryFeatureCount(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.load(t).then((()=>this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)))}queryObjectIds(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.load(t).then((()=>this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)))}queryExtent(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.load(t).then((()=>this._connection.invoke("queryExtent",e?e.toJSON():null,t))).then((e=>({count:e.count,extent:_.Z.fromJSON(e.extent)})))}querySnapping(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.load(t).then((()=>this._connection.invoke("querySnapping",e,t)))}_applyEdits(e){if(!this._connection)throw new m.Z("geojson-layer-source:edit-failure","Memory source not loaded");const t=this.layer.objectIdField,r=[],s=[],o=[];if(e.addFeatures)for(const i of e.addFeatures)r.push(this._serializeFeature(i));if(e.deleteFeatures)for(const i of e.deleteFeatures)"objectId"in i&&null!=i.objectId?s.push(i.objectId):"attributes"in i&&null!=i.attributes[t]&&s.push(i.attributes[t]);if(e.updateFeatures)for(const i of e.updateFeatures)o.push(this._serializeFeature(i));return this._connection.invoke("applyEdits",{adds:r,updates:o,deletes:s}).then((e=>{let{extent:t,timeExtent:r,featureEditResults:s}=e;return this.sourceJSON.extent=t,r&&(this.sourceJSON.timeInfo.timeExtent=[r.start,r.end]),this._createEditsResult(s)}))}_createEditsResult(e){return{addFeatureResults:e.addResults?e.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:e.updateResults?e.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:e.deleteResults?e.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}_createFeatureEditResult(e){const t=!0===e.success?null:e.error||{code:void 0,description:void 0};return{objectId:e.objectId,globalId:e.globalId,error:t?new m.Z("geojson-layer-source:edit-failure",t.description,{code:t.code}):null}}_serializeFeature(e){const{attributes:t}=e,r=this._geometryForSerialization(e);return r?{geometry:r.toJSON(),attributes:t}:{attributes:t}}_geometryForSerialization(e){const{geometry:t}=e;return null==t?null:"mesh"===t.type||"extent"===t.type?C.Z.fromExtent(t.extent):t}async _startWorker(e){this._connection=await(0,b.bA)("GeoJSONSourceWorker",{strategy:(0,p.Z)("feature-layers-workers")?"dedicated":"local",signal:e,registryTarget:this});const{fields:t,spatialReference:r,hasZ:s,geometryType:o,objectIdField:i,url:n,timeInfo:a,customParameters:u}=this.layer,l="defaults"===this.layer.originOf("spatialReference"),c={url:n,customParameters:u,fields:t&&t.map((e=>e.toJSON())),geometryType:h.M.toJSON(o),hasZ:s,objectIdField:i,timeInfo:a?a.toJSON():null,spatialReference:l?null:r&&r.toJSON()},y=await this._connection.invoke("load",c,{signal:e});for(const p of y.warnings)d.Z.getLogger(this.layer).warn("#load()",`${p.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:p});y.featureErrors.length&&d.Z.getLogger(this.layer).warn("#load()",`Encountered ${y.featureErrors.length} validation errors while loading features. (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{errors:y.featureErrors}),this.sourceJSON=y.layerDefinition,this.capabilities=(0,g.MS)(this.sourceJSON.hasZ,!0)}};(0,s._)([(0,l.Cb)()],S.prototype,"capabilities",void 0),(0,s._)([(0,l.Cb)()],S.prototype,"type",void 0),(0,s._)([(0,l.Cb)({constructOnly:!0})],S.prototype,"layer",void 0),(0,s._)([(0,l.Cb)()],S.prototype,"sourceJSON",void 0),S=(0,s._)([(0,c.j)("esri.layers.graphics.sources.GeoJSONSource")],S);var F=r(6693),O=r(46671),E=r(7632),I=r(49661),x=r(6061),R=r(9855),N=r(29598),w=r(71684),Z=r(56811),j=r(99063),J=r(70361),T=r(12224),q=r(83040),P=r(25610),A=r(37270),D=r(77748),Q=r(85116),k=r(21149),G=r(81085),$=r(6701),M=r(78952);const B=(0,P.v)();let z=class extends((0,R.c)((0,O.N)((0,I.M)((0,E.b)((0,F.h7)((0,j.n)((0,Z.M)((0,w.Q)((0,x.q)((0,N.I)((0,n.R)(y.Z)))))))))))){constructor(e){super(e),this.attributeTableTemplate=null,this.copyright=null,this.dateFieldsTimeZone=null,this.definitionExpression=null,this.displayField=null,this.editingEnabled=!1,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.hasZ=void 0,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="GeoJSON",this.outFields=null,this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new S({layer:this}),this.spatialReference=M.Z.WGS84,this.templates=null,this.title="GeoJSON",this.type="geojson"}destroy(){this.source?.destroy()}load(e){const t=this.loadFromPortal({supportedTypes:["GeoJson"],supportsData:!1},e).catch(a.r9).then((()=>this.source.load(e))).then((()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo"],"service"),(0,A.YN)(this.renderer,this.fieldsIndex),(0,A.UF)(this.timeInfo,this.fieldsIndex)}));return this.addResolvingPromise(t),Promise.resolve(this)}get capabilities(){return this.source?this.source.capabilities:null}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}get isTable(){return this.loaded&&null==this.geometryType}get parsedUrl(){return this.url?(0,u.mN)(this.url):null}set renderer(e){(0,A.YN)(e,this.fieldsIndex),this._set("renderer",e)}set url(e){if(!e)return void this._set("url",e);const t=(0,u.mN)(e);this._set("url",t.path),t.query&&(this.customParameters={...this.customParameters,...t.query})}async applyEdits(e,t){const{applyEdits:s}=await r.e(9887).then(r.bind(r,29887));await this.load();const o=await s(this,this.source,e,t);return this.read({extent:this.source.sourceJSON.extent,timeInfo:this.source.sourceJSON.timeInfo},{origin:"service",ignoreDefaults:!0}),o}on(e,t){return super.on(e,t)}createPopupTemplate(e){return(0,G.eZ)(this,e)}createQuery(){const e=new k.Z,t=this.capabilities?.data;e.returnGeometry=!0,t&&t.supportsZ&&(e.returnZ=!0),e.outFields=["*"],e.where=this.definitionExpression||"1=1";const{timeOffset:r,timeExtent:s}=this;return e.timeExtent=null!=r&&null!=s?s.offset(-r.value,r.unit):s||null,e}getFieldDomain(e,t){return this.getField(e)?.domain}getField(e){return this.fieldsIndex.get(e)}queryFeatures(e,t){return this.load().then((()=>this.source.queryFeatures(k.Z.from(e)||this.createQuery(),t))).then((e=>{if(e?.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this.load().then((()=>this.source.queryObjectIds(k.Z.from(e)||this.createQuery(),t)))}queryFeatureCount(e,t){return this.load().then((()=>this.source.queryFeatureCount(k.Z.from(e)||this.createQuery(),t)))}queryExtent(e,t){return this.load().then((()=>this.source.queryExtent(k.Z.from(e)||this.createQuery(),t)))}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh(this.customParameters);return null!=t&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}};(0,s._)([(0,l.Cb)(J.t4)],z.prototype,"attributeTableTemplate",void 0),(0,s._)([(0,l.Cb)({readOnly:!0,json:{read:!1,write:!1}})],z.prototype,"capabilities",null),(0,s._)([(0,l.Cb)({type:String})],z.prototype,"copyright",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],z.prototype,"createQueryVersion",null),(0,s._)([(0,l.Cb)((0,$.mi)("dateFieldsTimeReference"))],z.prototype,"dateFieldsTimeZone",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],z.prototype,"defaultPopupTemplate",null),(0,s._)([(0,l.Cb)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],z.prototype,"definitionExpression",void 0),(0,s._)([(0,l.Cb)({type:String})],z.prototype,"displayField",void 0),(0,s._)([(0,l.Cb)({type:Boolean})],z.prototype,"editingEnabled",void 0),(0,s._)([(0,l.Cb)(J.PV)],z.prototype,"elevationInfo",void 0),(0,s._)([(0,l.Cb)({type:[q.Z],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],z.prototype,"fields",void 0),(0,s._)([(0,l.Cb)(B.fieldsIndex)],z.prototype,"fieldsIndex",void 0),(0,s._)([(0,l.Cb)({type:_.Z,json:{name:"extent"}})],z.prototype,"fullExtent",void 0),(0,s._)([(0,l.Cb)({type:["point","polygon","polyline","multipoint"],json:{read:{reader:h.M.read}}})],z.prototype,"geometryType",void 0),(0,s._)([(0,l.Cb)({type:Boolean})],z.prototype,"hasZ",void 0),(0,s._)([(0,l.Cb)(J.id)],z.prototype,"id",void 0),(0,s._)([(0,l.Cb)({type:Boolean,readOnly:!0})],z.prototype,"isTable",null),(0,s._)([(0,l.Cb)(J.iR)],z.prototype,"labelsVisible",void 0),(0,s._)([(0,l.Cb)({type:[D.Z],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:Q.r},write:!0}})],z.prototype,"labelingInfo",void 0),(0,s._)([(0,l.Cb)(J.rn)],z.prototype,"legendEnabled",void 0),(0,s._)([(0,l.Cb)({type:["show","hide"]})],z.prototype,"listMode",void 0),(0,s._)([(0,l.Cb)({type:String,json:{name:"layerDefinition.objectIdField",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"objectIdField"}}}})],z.prototype,"objectIdField",void 0),(0,s._)([(0,l.Cb)(J.Oh)],z.prototype,"opacity",void 0),(0,s._)([(0,l.Cb)({type:["GeoJSON"]})],z.prototype,"operationalLayerType",void 0),(0,s._)([(0,l.Cb)(B.outFields)],z.prototype,"outFields",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],z.prototype,"parsedUrl",null),(0,s._)([(0,l.Cb)(J.C_)],z.prototype,"popupEnabled",void 0),(0,s._)([(0,l.Cb)({type:o.Z,json:{name:"popupInfo",write:!0}})],z.prototype,"popupTemplate",void 0),(0,s._)([(0,l.Cb)({types:i.A,json:{name:"layerDefinition.drawingInfo.renderer",write:!0,origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:i.o}}}})],z.prototype,"renderer",null),(0,s._)([(0,l.Cb)(J.YI)],z.prototype,"screenSizePerspectiveEnabled",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],z.prototype,"source",void 0),(0,s._)([(0,l.Cb)({type:M.Z})],z.prototype,"spatialReference",void 0),(0,s._)([(0,l.Cb)({type:[T.Z]})],z.prototype,"templates",void 0),(0,s._)([(0,l.Cb)()],z.prototype,"title",void 0),(0,s._)([(0,l.Cb)({json:{read:!1},readOnly:!0})],z.prototype,"type",void 0),(0,s._)([(0,l.Cb)(J.HQ)],z.prototype,"url",null),z=(0,s._)([(0,c.j)("esri.layers.GeoJSONLayer")],z);const U=z},60480:(e,t,r)=>{r.d(t,{g:()=>s});const s={supportsStatistics:!0,supportsPercentileStatistics:!0,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsCentroid:!0,supportsCacheHint:!0,supportsDistance:!0,supportsDistinct:!0,supportsExtent:!0,supportsGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQuantization:!0,supportsQuantizationEditMode:!1,supportsQueryGeometry:!0,supportsResultType:!0,supportsSqlExpression:!0,supportsMaxRecordCountFactor:!1,supportsStandardizedQueriesOnly:!0,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!0,supportsQueryByOthers:!0,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!0,supportsDefaultSpatialReference:!1,supportsFullTextSearch:!1,supportsCompactGeometry:!1,maxRecordCountFactor:void 0,maxRecordCount:void 0,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}},61040:(e,t,r)=>{r.d(t,{Dm:()=>d,Hq:()=>h,MS:()=>y,bU:()=>u});var s=r(93169),o=r(84652),i=r(60480),n=r(96978),a=r(76115);function u(e){return{renderer:{type:"simple",symbol:"esriGeometryPoint"===e||"esriGeometryMultipoint"===e?a.I4:"esriGeometryPolyline"===e?a.ET:a.lF}}}const l=/^[_$a-zA-Z][_$a-zA-Z0-9]*$/;let p=1;function d(e,t){if((0,s.Z)("esri-csp-restrictions"))return()=>({[t]:null,...e});try{let r=`this${c(t)} = null;`;for(const t in e)r+=`this${c(t)} = ${JSON.stringify(e[t])};`;const s=new Function(`\n      return class AttributesClass$${p++} {\n        constructor() {\n          ${r};\n        }\n      }\n    `)();return()=>new s}catch(r){return()=>({[t]:null,...e})}}function c(e){return l.test(e)?`.${e}`:`["${e}"]`}function h(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return[{name:"New Feature",description:"",prototype:{attributes:(0,o.d9)(e)}}]}function y(e,t){return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,isBranchVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:e},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:t,supportsDelete:t,supportsEditing:t,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryBins:!1,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:t,supportsExceedsLimitStatistics:!0,supportsAsyncConvert3D:!1},query:i.g,queryRelated:{supportsCount:!0,supportsOrderBy:!0,supportsPagination:!0,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},queryBins:n.s,editing:{supportsGeometryUpdate:t,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsAsyncApplyEdits:!1,zDefault:void 0}}}}}]);
//# sourceMappingURL=5064.48dd05f8.chunk.js.map